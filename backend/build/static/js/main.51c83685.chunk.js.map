{"version":3,"sources":["components/InfoWindowEx.js","components/MapContainer.js","services/places.js","actions/PlaceActions.js","constants/PlaceConstants.js","components/PlaceForm.js","components/UpdatePlaceForm.js","components/Place.js","components/PlaceList.js","App.js","reducers/PlaceReducer.js","stores/PlaceStore.js","index.js"],"names":["InfoWindowEx","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","infoWindowRef","React","createRef","onInfoWindowOpen","bind","assertThisInitialized","containerElement","document","createElement","inherits","createClass","key","value","ReactDOM","render","Children","only","children","current","infowindow","setContent","react_default","a","dist","assign","onOpen","ref","Component","mapStyles","width","height","ConnectedContainer","toggleInfoWindow","marker","e","title","state","activeMarker","showingInfoWindow","setState","selectedPlace","place_","apiKey","_this2","className","style","google","zoom","initialCenter","lat","lng","places","map","place","id","position","latitude","longitude","onClick","components_InfoWindowEx","visible","description","openingHours","MapContainer","connect","GoogleApiWrapper","services_places","getPlaces","axios","get","then","response","data","getPlace","createPlace","post","deletePlace","delete","updatePlace","put","content","dispatch","placeService","catch","err","console","log","res","dispatchCreatePlace","dispatchUpdatePlace","fetchPlacesBegin","type","fetchPlacesSuccess","fetchPlacesFailure","error","dispatchDeletePlace","ConnectedForm","toggleFormDisplay","form","getElementById","display","focus","handleChange","handleSubmit","event","defineProperty","target","preventDefault","onSubmit","htmlFor","onChange","PlaceForm","ConnectedUpdateForm","handleUpdate","toggleUpdatePlace","autoFocus","UpdatePlaceForm","ConnectedPlace","showPlace","showUpdateForm","handleDeletePlace","toggleShowPlace","components_UpdatePlaceForm","Place","ConnectedList","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","abrupt","t0","stop","_x","apply","arguments","_this$props","loading","message","length","components_Place","PlaceList","App","components_MapContainer","components_PlaceForm","components_PlaceList","initialState","PlaceReducer","undefined","action","objectSpread","concat","filter","PlaceStore","createStore","placeReducer","applyMiddleware","thunk","es","store","src_App"],"mappings":"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","file":"static/js/main.51c83685.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport ReactDOM from \"react-dom\";\r\nimport { InfoWindow } from \"google-maps-react\";\r\n\r\nexport class InfoWindowEx extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.infoWindowRef = React.createRef()\r\n        this.onInfoWindowOpen = this.onInfoWindowOpen.bind(this)\r\n        if (!this.containerElement) {\r\n            this.containerElement = document.createElement(`div`)\r\n        }\r\n    }\r\n\r\n    onInfoWindowOpen() {\r\n        ReactDOM.render(\r\n            React.Children.only(this.props.children),\r\n            this.containerElement\r\n        )\r\n        this.infoWindowRef.current.infowindow.setContent(this.containerElement)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <InfoWindow\r\n                onOpen={this.onInfoWindowOpen}\r\n                ref={this.infoWindowRef}\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoWindowEx","import React, { Component } from 'react'\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport { connect } from \"react-redux\"\r\nimport InfoWindowEx from './InfoWindowEx'\r\nimport mapService from '../services/maps'\r\n\r\nconst mapStyles = {\r\n  width: '50vw',\r\n  height: '50vh'\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { places: state.places };\r\n}\r\n\r\nexport class ConnectedContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      apiKey: ''\r\n    }\r\n\r\n    this.toggleInfoWindow = this.toggleInfoWindow.bind(this)\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   const apiKey = axios.get('http://localhost:3001/api/api_key')\r\n  //   this.setState({\r\n  //     apiKey: apiKey\r\n  //   })\r\n  // }\r\n\r\n  toggleInfoWindow = (props, marker, e) => {\r\n    if (marker.title === this.state.activeMarker.title && this.state.showingInfoWindow) {\r\n      this.setState({\r\n        activeMarker: {},\r\n        showingInfoWindow: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        selectedPlace: props.place_,\r\n        activeMarker: marker,\r\n        showingInfoWindow: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"map\" style={mapStyles}>\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={5}\r\n          style={mapStyles}\r\n          initialCenter={{\r\n            lat: 60.192059,\r\n            lng: 24.945831\r\n          }}\r\n        >\r\n          {this.props.places.map(place =>\r\n                <Marker\r\n                    key={place.id}\r\n                    position={{lat: place.latitude, lng: place.longitude}}\r\n                    title={place.title}\r\n                    place_={place}\r\n                    onClick={this.toggleInfoWindow}\r\n                />\r\n            )}\r\n            <InfoWindowEx\r\n              marker={this.state.activeMarker}\r\n              visible={this.state.showingInfoWindow}\r\n            >\r\n              <div className=\"infoWindow\">\r\n                <h3>{this.state.selectedPlace.title}</h3>\r\n                <p>{this.state.selectedPlace.description}</p>\r\n                <p>Open: {this.state.selectedPlace.openingHours}</p>\r\n              </div>\r\n            </InfoWindowEx>\r\n        </Map>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getApiKey = () => {\r\n  return mapService.getApiKey()\r\n}\r\n\r\nconst MapContainer = connect(mapStateToProps)(ConnectedContainer)\r\n\r\nexport default GoogleApiWrapper({\r\n  // apiKey: getApiKey()\r\n  apiKey: ''\r\n})(MapContainer)","import axios from 'axios'\r\nconst baseUrl = '/api/places/'\r\n\r\nconst getPlaces = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst getPlace = (id) => {\r\n    const request = axios.get(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst createPlace = (place) => {\r\n    const request = axios.post(baseUrl, place)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst deletePlace = (id) => {\r\n    const request = axios.delete(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst updatePlace = (place) => {\r\n    const request = axios.put(baseUrl + place.id, place)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default {\r\n    getPlaces,\r\n    getPlace,\r\n    createPlace,\r\n    deletePlace,\r\n    updatePlace\r\n}","import {\r\n    CREATE_PLACE,\r\n    DELETE_PLACE,\r\n    UPDATE_PLACE,\r\n    FETCH_PLACES_BEGIN,\r\n    FETCH_PLACES_SUCCESS,\r\n    FETCH_PLACES_FAILURE\r\n} from '../constants/PlaceConstants'\r\nimport placeService from '../services/places'\r\n\r\nexport function fetchPlaces() {\r\n    return async dispatch => {\r\n        dispatch(fetchPlacesBegin())\r\n        try {\r\n            const res = await placeService.getPlaces()\r\n            dispatch(fetchPlacesSuccess(res))\r\n            return res\r\n        }\r\n        catch (error) {\r\n            return dispatch(fetchPlacesFailure(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const createPlace = content => {\r\n\r\n    const place = {\r\n        title: content.title,\r\n        description: content.description,\r\n        latitude: content.latitude,\r\n        longitude: content.longitude,\r\n        openingHours: content.openingHours\r\n    }\r\n\r\n    return dispatch => {\r\n        placeService.createPlace(place)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchCreatePlace(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePlace = id => {\r\n    return dispatch => {\r\n        placeService.deletePlace(id)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchDeletePlace(id))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePlace = place => {\r\n    return dispatch => {\r\n        placeService.updatePlace(place)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchUpdatePlace(place))\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchPlacesBegin = () => ({\r\n    type: FETCH_PLACES_BEGIN\r\n})\r\n\r\nexport const fetchPlacesSuccess = places => ({\r\n    type: FETCH_PLACES_SUCCESS,\r\n    data: { places }\r\n})\r\n\r\nexport const fetchPlacesFailure = error => ({\r\n    type: FETCH_PLACES_FAILURE,\r\n    data: { error }\r\n})\r\n\r\nconst dispatchCreatePlace = place => {\r\n    return {\r\n        type: CREATE_PLACE,\r\n        data: {\r\n            title: place.title,\r\n            description: place.description,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude,\r\n            openingHours: place.openingHours,\r\n            id: place.id\r\n        }\r\n    }\r\n}\r\n\r\nconst dispatchDeletePlace = id => {\r\n    return {\r\n        type: DELETE_PLACE,\r\n        data: { id: id }\r\n    }\r\n}\r\n\r\nconst dispatchUpdatePlace = place => {\r\n    return {\r\n        type: UPDATE_PLACE,\r\n        data: { place: place }\r\n    }\r\n}","export const CREATE_PLACE = 'CREATE_PLACE'\r\nexport const DELETE_PLACE = 'DELETE_PLACE'\r\nexport const UPDATE_PLACE = 'UPDATE_PLACE'\r\nexport const FETCH_PLACES_BEGIN = 'FETCH_PLACES_BEGIN'\r\nexport const FETCH_PLACES_SUCCESS = 'FETCH_PLACES_SUCCESS'\r\nexport const FETCH_PLACES_FAILURE = 'FETCH_PLACES_FAILURE'","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { createPlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createPlace: place => dispatch(createPlace(place))\r\n    }\r\n}\r\n\r\nclass ConnectedForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const title = this.state.title\r\n        const description = this.state.description\r\n        const latitude = this.state.latitude\r\n        const longitude = this.state.longitude\r\n        const openingHours = this.state.openingHours\r\n\r\n        this.props.createPlace({\r\n            title,\r\n            description,\r\n            latitude,\r\n            longitude,\r\n            openingHours\r\n        })\r\n\r\n        this.setState({\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        })\r\n\r\n        this.toggleFormDisplay()\r\n    }\r\n\r\n    toggleFormDisplay = () => {\r\n        let form = document.getElementById(\"newPlaceForm\")\r\n        form.style.display === \"none\" ? form.style.display = \"block\" : form.style.display = \"none\"\r\n        document.getElementById(\"title\").focus()\r\n    }\r\n\r\n    render() {\r\n        const title = this.state.title\r\n        const description = this.state.description\r\n        const latitude = this.state.latitude\r\n        const longitude = this.state.longitude\r\n        const openingHours = this.state.openingHours\r\n\r\n        const formStyle = {\r\n            display: \"none\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"placeForm\">\r\n                <button onClick={this.toggleFormDisplay}>Add place</button>\r\n                <div className=\"newPlaceForm\" id=\"newPlaceForm\" style={formStyle}>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"title\" value={title} onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"description\" value={description} onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"latitude\">Latitude</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"latitude\" value={latitude} onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"longitude\">Longitude</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"longitude\" value={longitude} onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"openingHours\">Opening hours</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"openingHours\" value={openingHours} onChange={this.handleChange} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-success btn-lg\">Save</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlaceForm = connect(null, mapDispatchToProps)(ConnectedForm)\r\n\r\nexport default PlaceForm","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { updatePlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updatePlace: place => dispatch(updatePlace(place))\r\n    }\r\n}\r\n\r\nclass ConnectedUpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\",\r\n            id: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            title: this.props.place.title,\r\n            description: this.props.place.description,\r\n            latitude: this.props.place.latitude,\r\n            longitude: this.props.place.longitude,\r\n            openingHours: this.props.place.openingHours,\r\n            id: this.props.place.id\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault()\r\n\r\n        const title = this.state.title\r\n        const description = this.state.description\r\n        const latitude = this.state.latitude\r\n        const longitude = this.state.longitude\r\n        const openingHours = this.state.openingHours\r\n        const id = this.state.id\r\n\r\n        this.props.updatePlace({\r\n            title,\r\n            description,\r\n            latitude,\r\n            longitude,\r\n            openingHours,\r\n            id\r\n        })\r\n\r\n        this.setState({\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        })\r\n\r\n        this.props.toggleUpdatePlace()\r\n    }\r\n\r\n    render() {\r\n        const title = this.state.title\r\n        const description = this.state.description\r\n        const latitude = this.state.latitude\r\n        const longitude = this.state.longitude\r\n        const openingHours = this.state.openingHours\r\n\r\n        return (\r\n            <div className=\"updatePlaceForm\" id=\"updatePlaceForm\">\r\n                <form onSubmit={this.handleUpdate}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"title\" value={title} onChange={this.handleChange} autoFocus />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"description\" value={description} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"latitude\">Latitude</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"latitude\" value={latitude} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"longitude\">Longitude</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"longitude\" value={longitude} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"openingHours\">Opening hours</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"openingHours\" value={openingHours} onChange={this.handleChange} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-success btn-lg\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst UpdatePlaceForm = connect(null, mapDispatchToProps)(ConnectedUpdateForm)\r\n\r\nexport default UpdatePlaceForm","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deletePlace } from '../actions/PlaceActions'\r\nimport UpdatePlaceForm from './UpdatePlaceForm'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deletePlace: id => dispatch(deletePlace(id))\r\n    }\r\n}\r\n\r\nclass ConnectedPlace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showPlace: false,\r\n            showUpdateForm: false\r\n        }\r\n\r\n        this.handleDeletePlace = this.handleDeletePlace.bind(this)\r\n        this.toggleShowPlace = this.toggleShowPlace.bind(this)\r\n        this.toggleUpdatePlace = this.toggleUpdatePlace.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ place: this.props.place })\r\n    }\r\n\r\n    handleDeletePlace() {\r\n        this.props.deletePlace(this.props.place.id)\r\n    }\r\n\r\n    toggleShowPlace() {\r\n        this.setState({ showPlace: !this.state.showPlace })\r\n    }\r\n\r\n    toggleUpdatePlace() {\r\n        this.setState({ showUpdateForm: !this.state.showUpdateForm })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li key={this.props.place.id}>\r\n                <span onClick={this.toggleShowPlace} className=\"placeTitle\">{this.props.place.title}</span>\r\n                <br/><span>{this.props.place.id}</span>\r\n                {this.state.showPlace ?\r\n                    <div>\r\n                        <span>{this.props.place.description}</span><br/>\r\n                        <span>Open: {this.props.place.openingHours}</span><br/>\r\n                        <button onClick={this.handleDeletePlace}>Delete</button>\r\n                        <button onClick={this.toggleUpdatePlace}>Update</button>\r\n                        {this.state.showUpdateForm ?\r\n                            <UpdatePlaceForm\r\n                                place={this.props.place}\r\n                                toggleUpdatePlace={this.toggleUpdatePlace}\r\n                            />\r\n                        : null}\r\n                    </div>\r\n                : null}\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nconst Place = connect(null, mapDispatchToProps)(ConnectedPlace)\r\n\r\nexport default Place","import React from 'react'\r\nimport Place from './Place'\r\nimport { connect } from 'react-redux'\r\nimport { fetchPlaces } from '../actions/PlaceActions'\r\n\r\nconst mapStateToProps = state => ({\r\n    places: state.places,\r\n    loading: state.loading,\r\n    error: state.error\r\n})\r\n\r\nclass ConnectedList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchPlaces())\r\n    }\r\n\r\n    render() {\r\n        const { error, loading, places } = this.props\r\n        if (error) {\r\n            return <div>Error! {error.message}</div>\r\n        }\r\n        if (loading && places.length > 0) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return(\r\n            <div className=\"placesList\">\r\n                <ul>\r\n                    {places.map(place =>\r\n                        <Place\r\n                            key={place.id}\r\n                            place={place}\r\n                        />\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlaceList = connect(mapStateToProps)(ConnectedList)\r\n\r\nexport default PlaceList","import React from 'react'\r\nimport MapContainer from './components/MapContainer'\r\nimport PlaceForm from './components/PlaceForm'\r\nimport PlaceList from './components/PlaceList'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <MapContainer />\r\n      <PlaceForm />\r\n      <PlaceList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import {\r\n  CREATE_PLACE,\r\n  DELETE_PLACE,\r\n  UPDATE_PLACE,\r\n  FETCH_PLACES_BEGIN,\r\n  FETCH_PLACES_SUCCESS,\r\n  FETCH_PLACES_FAILURE\r\n} from '../constants/PlaceConstants'\r\n\r\nconst initialState = {\r\n    places: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst PlaceReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_PLACES_BEGIN:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          error: null\r\n        }\r\n      case FETCH_PLACES_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          places: action.data.places\r\n        }\r\n      case FETCH_PLACES_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.data.error,\r\n          places: []\r\n        }\r\n      case CREATE_PLACE:\r\n        return Object.assign({}, state, {\r\n            places: state.places.concat(action.data)\r\n        })\r\n      case DELETE_PLACE:\r\n        return Object.assign({}, state, {\r\n            places: state.places.filter(place => place.id !== action.data.id)\r\n        })\r\n      case UPDATE_PLACE:\r\n        return Object.assign({}, state, {\r\n          places: state.places.map(place => place.id !== action.data.place.id ? place : action.data.place)\r\n        })\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default PlaceReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport placeReducer from '../reducers/PlaceReducer'\r\n\r\nconst PlaceStore = createStore(\r\n    placeReducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default PlaceStore","import React from 'react'\r\nimport { render } from \"react-dom\"\r\nimport App from './App'\r\nimport { Provider } from \"react-redux\"\r\nimport store from './stores/PlaceStore'\r\nimport './styles.css'\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}