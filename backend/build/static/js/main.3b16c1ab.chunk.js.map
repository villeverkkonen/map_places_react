{"version":3,"sources":["components/InfoWindowEx.js","services/maps.js","components/MapContainer.js","services/places.js","actions/PlaceActions.js","constants/PlaceConstants.js","components/PlaceForm.js","components/UpdatePlaceForm.js","components/Place.js","components/PlaceList.js","App.js","reducers/PlaceReducer.js","stores/PlaceStore.js","index.js"],"names":["InfoWindowEx","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","infoWindowRef","React","createRef","onInfoWindowOpen","bind","assertThisInitialized","containerElement","document","createElement","inherits","createClass","key","value","ReactDOM","render","Children","only","children","current","infowindow","setContent","react_default","a","dist","assign","onOpen","ref","Component","maps","ConnectedContainer","toggleInfoWindow","marker","e","title","state","activeMarker","showingInfoWindow","setState","selectedPlace","place_","apiKey","markers","_this2","className","google","zoom","initialCenter","lat","lng","places","map","place","id","position","latitude","longitude","onClick","components_InfoWindowEx","visible","description","openingHours","MapContainer","connect","GoogleApiWrapper","mapService","baseUrl","services_places","getPlaces","axios","get","then","response","data","getPlace","createPlace","post","deletePlace","delete","updatePlace","put","content","dispatch","placeService","catch","err","console","log","res","dispatchCreatePlace","dispatchUpdatePlace","fetchPlacesBegin","type","fetchPlacesSuccess","fetchPlacesFailure","error","dispatchDeletePlace","ConnectedForm","handleChange","handleSubmit","toggleFormDisplay","hideForm","event","defineProperty","target","preventDefault","form","getElementById","style","display","classList","add","remove","focus","onSubmit","autoComplete","htmlFor","onChange","PlaceForm","ConnectedUpdateForm","updateTitle","updateDescription","updateLatitude","updateLongitude","updateOpeningHours","handleUpdate","hideUpdatePlace","autoFocus","UpdatePlaceForm","ConnectedPlace","toggleUpdatePlace","showUpdateForm","showPlace","handleDeletePlace","toggleShowPlace","titleText","placeDiv","color","placeDivId","placeListTitleId","components_UpdatePlaceForm","Place","ConnectedList","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","abrupt","t0","stop","_x","apply","arguments","_this$props","loading","message","length","components_Place","PlaceList","App","components_MapContainer","components_PlaceForm","components_PlaceList","initialState","PlaceReducer","undefined","action","objectSpread","concat","filter","PlaceStore","createStore","placeReducer","applyMiddleware","thunk","es","store","src_App"],"mappings":"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","file":"static/js/main.3b16c1ab.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport ReactDOM from \"react-dom\";\r\nimport { InfoWindow } from \"google-maps-react\";\r\n\r\nexport class InfoWindowEx extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.infoWindowRef = React.createRef()\r\n        this.onInfoWindowOpen = this.onInfoWindowOpen.bind(this)\r\n        if (!this.containerElement) {\r\n            this.containerElement = document.createElement(`div`)\r\n        }\r\n    }\r\n\r\n    onInfoWindowOpen() {\r\n        ReactDOM.render(\r\n            React.Children.only(this.props.children),\r\n            this.containerElement\r\n        )\r\n        this.infoWindowRef.current.infowindow.setContent(this.containerElement)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <InfoWindow\r\n                onOpen={this.onInfoWindowOpen}\r\n                ref={this.infoWindowRef}\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoWindowEx","// import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/maps/'\r\n\r\nconst getApiKey = () => {\r\n    return ''\r\n    // const request = axios.get(baseUrl + 'api_key')\r\n    // return request.then(response => { return response.data })\r\n}\r\n\r\nexport default {\r\n    getApiKey\r\n}","import React, { Component } from 'react'\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport { connect } from \"react-redux\"\r\nimport InfoWindowEx from './InfoWindowEx'\r\nimport mapService from '../services/maps'\r\n\r\nconst mapStateToProps = state => {\r\n  return { places: state.places };\r\n}\r\n\r\nexport class ConnectedContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      apiKey: '',\r\n      markers: []\r\n    }\r\n\r\n    this.toggleInfoWindow = this.toggleInfoWindow.bind(this)\r\n  }\r\n\r\n  toggleInfoWindow = (props, marker, e) => {\r\n    if (marker.title === this.state.activeMarker.title && this.state.showingInfoWindow) {\r\n      this.setState({\r\n        activeMarker: {},\r\n        showingInfoWindow: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        selectedPlace: props.place_,\r\n        activeMarker: marker,\r\n        showingInfoWindow: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"map\">\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={5}\r\n          initialCenter={{\r\n            lat: 60.192059,\r\n            lng: 24.945831\r\n          }}\r\n        >\r\n          {this.props.places.map(place =>\r\n                <Marker\r\n                    key={place.id}\r\n                    position={{lat: place.latitude, lng: place.longitude}}\r\n                    title={place.title}\r\n                    place_={place}\r\n                    onClick={this.toggleInfoWindow}\r\n                />\r\n            )}\r\n            <InfoWindowEx\r\n              marker={this.state.activeMarker}\r\n              visible={this.state.showingInfoWindow}\r\n            >\r\n              <div className=\"infoWindow\">\r\n                <h3>{this.state.selectedPlace.title}</h3>\r\n                <p>{this.state.selectedPlace.description}</p>\r\n                <p>Open: {this.state.selectedPlace.openingHours}</p>\r\n              </div>\r\n            </InfoWindowEx>\r\n        </Map>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getApiKey = () => {\r\n  return mapService.getApiKey()\r\n}\r\n\r\nconst MapContainer = connect(mapStateToProps)(ConnectedContainer)\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: getApiKey()\r\n})(MapContainer)","import axios from 'axios'\r\nconst baseUrl = '/api/places/'\r\n\r\nconst getPlaces = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst getPlace = (id) => {\r\n    const request = axios.get(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst createPlace = (place) => {\r\n    const request = axios.post(baseUrl, place)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst deletePlace = (id) => {\r\n    const request = axios.delete(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst updatePlace = (place) => {\r\n    const request = axios.put(baseUrl + place.id, place)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default {\r\n    getPlaces,\r\n    getPlace,\r\n    createPlace,\r\n    deletePlace,\r\n    updatePlace\r\n}","import {\r\n    CREATE_PLACE,\r\n    DELETE_PLACE,\r\n    UPDATE_PLACE,\r\n    FETCH_PLACES_BEGIN,\r\n    FETCH_PLACES_SUCCESS,\r\n    FETCH_PLACES_FAILURE\r\n} from '../constants/PlaceConstants'\r\nimport placeService from '../services/places'\r\n\r\nexport function fetchPlaces() {\r\n    return async dispatch => {\r\n        dispatch(fetchPlacesBegin())\r\n        try {\r\n            const res = await placeService.getPlaces()\r\n            dispatch(fetchPlacesSuccess(res))\r\n            return res\r\n        }\r\n        catch (error) {\r\n            return dispatch(fetchPlacesFailure(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const createPlace = content => {\r\n\r\n    const place = {\r\n        title: content.title,\r\n        description: content.description,\r\n        latitude: content.latitude,\r\n        longitude: content.longitude,\r\n        openingHours: content.openingHours\r\n    }\r\n\r\n    return dispatch => {\r\n        placeService.createPlace(place)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchCreatePlace(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePlace = id => {\r\n    return dispatch => {\r\n        placeService.deletePlace(id)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchDeletePlace(id))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePlace = place => {\r\n    return dispatch => {\r\n        placeService.updatePlace(place)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchUpdatePlace(place))\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchPlacesBegin = () => ({\r\n    type: FETCH_PLACES_BEGIN\r\n})\r\n\r\nexport const fetchPlacesSuccess = places => ({\r\n    type: FETCH_PLACES_SUCCESS,\r\n    data: { places }\r\n})\r\n\r\nexport const fetchPlacesFailure = error => ({\r\n    type: FETCH_PLACES_FAILURE,\r\n    data: { error }\r\n})\r\n\r\nconst dispatchCreatePlace = place => {\r\n    return {\r\n        type: CREATE_PLACE,\r\n        data: {\r\n            title: place.title,\r\n            description: place.description,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude,\r\n            openingHours: place.openingHours,\r\n            id: place.id\r\n        }\r\n    }\r\n}\r\n\r\nconst dispatchDeletePlace = id => {\r\n    return {\r\n        type: DELETE_PLACE,\r\n        data: { id: id }\r\n    }\r\n}\r\n\r\nconst dispatchUpdatePlace = place => {\r\n    return {\r\n        type: UPDATE_PLACE,\r\n        data: { place: place }\r\n    }\r\n}","export const CREATE_PLACE = 'CREATE_PLACE'\r\nexport const DELETE_PLACE = 'DELETE_PLACE'\r\nexport const UPDATE_PLACE = 'UPDATE_PLACE'\r\nexport const FETCH_PLACES_BEGIN = 'FETCH_PLACES_BEGIN'\r\nexport const FETCH_PLACES_SUCCESS = 'FETCH_PLACES_SUCCESS'\r\nexport const FETCH_PLACES_FAILURE = 'FETCH_PLACES_FAILURE'","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { createPlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createPlace: place => dispatch(createPlace(place))\r\n    }\r\n}\r\n\r\nclass ConnectedForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this)\r\n        this.hideForm = this.hideForm.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const title = this.state.title\r\n        const description = this.state.description\r\n        const latitude = this.state.latitude\r\n        const longitude = this.state.longitude\r\n        const openingHours = this.state.openingHours\r\n\r\n        this.props.createPlace({\r\n            title,\r\n            description,\r\n            latitude,\r\n            longitude,\r\n            openingHours\r\n        })\r\n\r\n        this.setState({\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        })\r\n\r\n        this.hideForm()\r\n    }\r\n\r\n    toggleFormDisplay(event) {\r\n        event.preventDefault()\r\n\r\n        let form = document.getElementById(\"createPlaceForm\")\r\n\r\n        form.style.display === \"none\" ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        \r\n        form.style.display === \"none\" ? form.style.display = \"block\" : form.style.display = \"none\"\r\n        document.getElementById(\"title\").focus()\r\n    }\r\n\r\n    hideForm() {\r\n        let form = document.getElementById(\"createPlaceForm\")\r\n        form.style.display = \"none\"\r\n\r\n        let button = document.getElementById(\"addPlaceButton\")\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    render() {\r\n        const formStyle = {\r\n            display: \"none\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"placeForm\">\r\n                <button onClick={this.toggleFormDisplay} className=\"addPlaceButton\" id=\"addPlaceButton\">Add place</button>\r\n                <div className=\"createPlaceForm\" id=\"createPlaceForm\" style={formStyle}>\r\n                    <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"title\" className=\"createPlaceLabel\">Title</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"description\" className=\"createPlaceLabel\">Description</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"latitude\" className=\"createPlaceLabel\">Latitude</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"latitude\" value={this.state.latitude} onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"longitude\" className=\"createPlaceLabel\">Longitude</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"longitude\" value={this.state.longitude} onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"openingHours\" className=\"createPlaceLabel\">Opening hours</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"openingHours\" value={this.state.openingHours} onChange={this.handleChange} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"createPlaceSaveButton\">Save</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlaceForm = connect(null, mapDispatchToProps)(ConnectedForm)\r\n\r\nexport default PlaceForm","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { updatePlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updatePlace: place => dispatch(updatePlace(place))\r\n    }\r\n}\r\n\r\nclass ConnectedUpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            updateTitle: \"\",\r\n            updateDescription: \"\",\r\n            updateLatitude: \"\",\r\n            updateLongitude: \"\",\r\n            updateOpeningHours: \"\",\r\n            id: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            updateTitle: this.props.place.title,\r\n            updateDescription: this.props.place.description,\r\n            updateLatitude: this.props.place.latitude,\r\n            updateLongitude: this.props.place.longitude,\r\n            updateOpeningHours: this.props.place.openingHours,\r\n            id: this.props.place.id\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault()\r\n\r\n        this.props.updatePlace({\r\n            title: this.state.updateTitle,\r\n            description: this.state.updateDescription,\r\n            latitude: this.state.updateLatitude,\r\n            longitude: this.state.updateLongitude,\r\n            openingHours: this.state.updateOpeningHours,\r\n            id: this.state.id\r\n        })\r\n\r\n        this.setState({\r\n            updateTitle: \"\",\r\n            updateDescription: \"\",\r\n            updateLatitude: \"\",\r\n            updateLongitude: \"\",\r\n            updateOpeningHours: \"\"\r\n        })\r\n\r\n        this.props.hideUpdatePlace()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"updatePlaceForm\" id=\"updatePlaceForm\">\r\n                <form onSubmit={this.handleUpdate} autoComplete=\"off\">\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor=\"updateTitle\" className=\"updatePlaceLabel\">Title</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id=\"updateTitle\" value={this.state.updateTitle} onChange={this.handleChange} autoFocus />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor=\"updateDescription\" className=\"updatePlaceLabel\">Description</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id=\"updateDescription\" value={this.state.updateDescription} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor=\"updateLatitude\" className=\"updatePlaceLabel\">Latitude</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id=\"updateLatitude\" value={this.state.updateLatitude} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor=\"updateLongitude\" className=\"updatePlaceLabel\">Longitude</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id=\"updateLongitude\" value={this.state.updateLongitude} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor=\"updateOpeningHours\" className=\"updatePlaceLabel\">Opening hours</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id=\"updateOpeningHours\" value={this.state.updateOpeningHours} onChange={this.handleChange} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"updatePlaceSaveButton\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst UpdatePlaceForm = connect(null, mapDispatchToProps)(ConnectedUpdateForm)\r\n\r\nexport default UpdatePlaceForm","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deletePlace } from '../actions/PlaceActions'\r\nimport UpdatePlaceForm from './UpdatePlaceForm'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deletePlace: id => dispatch(deletePlace(id))\r\n    }\r\n}\r\n\r\nclass ConnectedPlace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showPlace: false,\r\n            showUpdateForm: false\r\n        }\r\n\r\n        this.handleDeletePlace = this.handleDeletePlace.bind(this)\r\n        this.toggleShowPlace = this.toggleShowPlace.bind(this)\r\n        this.toggleUpdatePlace = this.toggleUpdatePlace.bind(this)\r\n        this.hideUpdatePlace = this.hideUpdatePlace.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ place: this.props.place })\r\n    }\r\n\r\n    handleDeletePlace() {\r\n        this.props.deletePlace(this.props.place.id)\r\n    }\r\n\r\n    toggleShowPlace() {\r\n        const titleText = document.getElementById(\"placeListTitle\" + this.props.place.id)\r\n        const placeDiv = document.getElementById(\"placeListObject\" + this.props.place.id)\r\n\r\n        if (this.state.showPlace) {\r\n            titleText.style.color = \"orange\"\r\n            placeDiv.classList.remove(\"linearGradient\")\r\n        } else {\r\n            titleText.style.color = \"gold\"\r\n            placeDiv.classList.add(\"linearGradient\")\r\n        }\r\n\r\n        this.setState({ showPlace: !this.state.showPlace })\r\n    }\r\n\r\n    toggleUpdatePlace = (event) => {\r\n        event.preventDefault()\r\n\r\n        !this.state.showUpdateForm ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        this.setState({ showUpdateForm: !this.state.showUpdateForm })\r\n    }\r\n\r\n    hideUpdatePlace() {\r\n        this.setState({\r\n            showUpdateForm: false\r\n        })\r\n\r\n        let button = document.getElementById(\"updatePlaceButton\")\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    render() {\r\n        const placeDivId = \"placeListObject\" + this.props.place.id\r\n        const placeListTitleId = \"placeListTitle\" + this.props.place.id\r\n        return (\r\n            <div key={this.props.place.id} className=\"placeListObject\" id={placeDivId}>\r\n                <span onClick={this.toggleShowPlace} className=\"placeListTitle\" id={placeListTitleId}>{this.props.place.title}</span>\r\n                {this.state.showPlace ?\r\n                    <div>\r\n                        <span>{this.props.place.description}</span><br/>\r\n                        <span>Open: {this.props.place.openingHours}</span><br/>\r\n                        <button onClick={this.handleDeletePlace} className=\"deletePlaceButton\">Delete</button>\r\n                        <button onClick={this.toggleUpdatePlace} className=\"updatePlaceButton\" id=\"updatePlaceButton\">Update</button>\r\n                        {this.state.showUpdateForm ?\r\n                            <UpdatePlaceForm\r\n                                place={this.props.place}\r\n                                hideUpdatePlace={this.hideUpdatePlace}\r\n                            />\r\n                        : null}\r\n                    </div>\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Place = connect(null, mapDispatchToProps)(ConnectedPlace)\r\n\r\nexport default Place","import React from 'react'\r\nimport Place from './Place'\r\nimport { connect } from 'react-redux'\r\nimport { fetchPlaces } from '../actions/PlaceActions'\r\n\r\nconst mapStateToProps = state => ({\r\n    places: state.places,\r\n    loading: state.loading,\r\n    error: state.error\r\n})\r\n\r\nclass ConnectedList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchPlaces())\r\n    }\r\n\r\n    render() {\r\n        const { error, loading, places } = this.props\r\n        if (error) {\r\n            return <div>Error! {error.message}</div>\r\n        }\r\n        if (loading && places.length > 0) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return(\r\n            <div className=\"placesList\">\r\n                {places.map(place =>\r\n                    <Place\r\n                        key={place.id}\r\n                        place={place}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlaceList = connect(mapStateToProps)(ConnectedList)\r\n\r\nexport default PlaceList","import React from 'react'\r\nimport MapContainer from './components/MapContainer'\r\nimport PlaceForm from './components/PlaceForm'\r\nimport PlaceList from './components/PlaceList'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <MapContainer />\r\n      <PlaceForm />\r\n      <PlaceList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import {\r\n  CREATE_PLACE,\r\n  DELETE_PLACE,\r\n  UPDATE_PLACE,\r\n  FETCH_PLACES_BEGIN,\r\n  FETCH_PLACES_SUCCESS,\r\n  FETCH_PLACES_FAILURE\r\n} from '../constants/PlaceConstants'\r\n\r\nconst initialState = {\r\n    places: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst PlaceReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_PLACES_BEGIN:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          error: null\r\n        }\r\n      case FETCH_PLACES_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          places: action.data.places\r\n        }\r\n      case FETCH_PLACES_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.data.error,\r\n          places: []\r\n        }\r\n      case CREATE_PLACE:\r\n        return Object.assign({}, state, {\r\n            places: state.places.concat(action.data)\r\n        })\r\n      case DELETE_PLACE:\r\n        return Object.assign({}, state, {\r\n            places: state.places.filter(place => place.id !== action.data.id)\r\n        })\r\n      case UPDATE_PLACE:\r\n        return Object.assign({}, state, {\r\n          places: state.places.map(place => place.id !== action.data.place.id ? place : action.data.place)\r\n        })\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default PlaceReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport placeReducer from '../reducers/PlaceReducer'\r\n\r\nconst PlaceStore = createStore(\r\n    placeReducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default PlaceStore","import React from 'react'\r\nimport { render } from \"react-dom\"\r\nimport App from './App'\r\nimport { Provider } from \"react-redux\"\r\nimport store from './stores/PlaceStore'\r\nimport './styles/styles.css'\r\nimport './styles/forms.css'\r\nimport './styles/responsive.css'\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}