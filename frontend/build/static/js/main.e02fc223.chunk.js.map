{"version":3,"sources":["services/maps.js","components/InfoWindowEx.js","components/MapContainer.js","components/GoogleMap.js","services/places.js","actions/PlaceActions.js","constants/PlaceConstants.js","components/PlaceForm.js","services/keywords.js","actions/KeywordActions.js","constants/KeywordConstants.js","components/UpdateKeywordForm.js","components/Keyword.js","components/KeywordList.js","components/KeywordForm.js","components/UpdatePlaceForm.js","components/Place.js","components/PlaceList.js","components/KeywordSearch.js","App.js","reducers/PlaceReducer.js","reducers/MarkerReducer.js","reducers/KeywordReducer.js","stores/RootStore.js","index.js"],"names":["maps","axios","get","baseUrl","then","response","data","InfoWindowEx","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","infoWindowRef","React","createRef","onInfoWindowOpen","bind","assertThisInitialized","containerElement","document","createElement","inherits","createClass","key","value","ReactDOM","render","Children","only","children","current","infowindow","setContent","react_default","a","dist","assign","onOpen","ref","Component","ConnectedContainer","toggleInfoWindow","marker","e","title","state","activeMarker","showingInfoWindow","setState","selectedPlace","place_","_this2","className","google","zoom","initialCenter","lat","lng","placesByQuery","length","keywordSearchQuery","map","place","id","position","latitude","longitude","onClick","places","components_InfoWindowEx","visible","description","openingHours","MapContainer","connect","placeReducer","markers","markerReducer","GoogleApiWrapper","GoogleMap","apiKey","mapService","components_MapContainer","services_places","getPlaces","getPlace","createPlace","post","deletePlace","delete","updatePlace","put","fetchPlaces","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","wrap","_context","prev","next","fetchPlacesBegin","placeService","sent","fetchPlacesSuccess","abrupt","t0","fetchPlacesFailure","stop","_x","apply","arguments","content","catch","err","console","log","dispatchCreatePlace","dispatchUpdatePlace","type","error","dispatchDeletePlace","changeLabelColor","inputId","color","labels","getElementsByTagName","i","htmlFor","input","getElementById","label","style","changeInputColor","backgroundColor","ConnectedPlaceForm","handleChange","handleSubmit","toggleFormDisplay","hideForm","handleMouseOverLabel","handleMouseOutLabel","handleMouseOverInput","handleMouseOutInput","event","defineProperty","target","preventDefault","form","display","classList","add","remove","focus","onSubmit","autoComplete","onMouseOver","onMouseOut","onChange","PlaceForm","services_keywords","getKeywords","getKeyword","createKeyword","keyword","deleteKeyword","updateKeyword","fetchKeywords","fetchKeywordsBegin","keywordService","fetchKeywordsSuccess","fetchKeywordsFailure","placeId","dispatchCreateKeyword","dispatchUpdateKeyword","keywords","dispatchDeleteKeyword","ConnectedUpdateKeywordForm","updateKeywordTitle","handleUpdate","dataset","hideUpdateKeyword","data-id","autoFocus","UpdateKeywordForm","ConnectedKeyword","toggleUpdateKeyword","showKeywordForm","showKeyword","handleDeleteKeyword","toggleShowKeyword","titleText","keywordDiv","components_UpdateKeywordForm","Keyword","deleteKeywordFromPlace","ConnectedKeywordList","_this$props","loading","message","_id","components_Keyword","KeywordList","keywordReducer","ConnectedKeywordForm","keywordTitle","KeywordForm","ConnectedUpdatePlaceForm","updateTitle","updateDescription","updateLatitude","updateLongitude","updateOpeningHours","hideUpdatePlace","UpdatePlaceForm","ConnectedPlace","toggleUpdatePlace","showUpdateForm","showPlace","handleDeletePlace","toggleShowPlace","placeDiv","components_KeywordList","components_KeywordForm","components_UpdatePlaceForm","Place","ConnectedPlaceList","components_Place","PlaceList","ConnectedKeywordSearch","searchByKeyword","dispatchPlacesByQuery","uniqueKeywords","toggleKeywordListDisplay","getUniqueKeywordsByTitle","button","list","innerHTML","contains","keywordAlreadyExists","y","push","sort","b","localeCompare","index","toLowerCase","startsWith","includes","concat","getPlacesByQuery","_this3","KeywordSearch","App","components_GoogleMap","components_PlaceForm","components_KeywordSearch","components_PlaceList","initialState","PlaceReducer","undefined","action","objectSpread","newPlace","filter","placeToEdit","MarkerReducer","KeywordReducer","rootReducer","combineReducers","RootStore","createStore","applyMiddleware","thunk","es","store","src_App"],"mappings":"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","file":"static/js/main.e02fc223.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/maps/'\r\n\r\nconst getApiKey = () => {\r\n  const request = axios.get(baseUrl + 'api_key')\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nexport default {\r\n  getApiKey,\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { InfoWindow } from 'google-maps-react'\r\n\r\nexport class InfoWindowEx extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.infoWindowRef = React.createRef()\r\n    this.onInfoWindowOpen = this.onInfoWindowOpen.bind(this)\r\n    if (!this.containerElement) {\r\n      this.containerElement = document.createElement(`div`)\r\n    }\r\n  }\r\n\r\n  onInfoWindowOpen() {\r\n    ReactDOM.render(\r\n      React.Children.only(this.props.children),\r\n      this.containerElement\r\n    )\r\n    this.infoWindowRef.current.infowindow.setContent(this.containerElement)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <InfoWindow\r\n        onOpen={this.onInfoWindowOpen}\r\n        ref={this.infoWindowRef}\r\n        {...this.props}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default InfoWindowEx\r\n","import React, { Component } from 'react'\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport { connect } from 'react-redux'\r\nimport InfoWindowEx from './InfoWindowEx'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    places: state.placeReducer.places,\r\n    placesByQuery: state.placeReducer.placesByQuery,\r\n    keywordSearchQuery: state.placeReducer.keywordSearchQuery,\r\n    markers: state.markerReducer.markers,\r\n  }\r\n}\r\n\r\nexport class ConnectedContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n    }\r\n\r\n    this.toggleInfoWindow = this.toggleInfoWindow.bind(this)\r\n  }\r\n\r\n  toggleInfoWindow = (props, marker, e) => {\r\n    if (\r\n      marker.title === this.state.activeMarker.title &&\r\n      this.state.showingInfoWindow\r\n    ) {\r\n      this.setState({\r\n        activeMarker: {},\r\n        showingInfoWindow: false,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        selectedPlace: props.place_,\r\n        activeMarker: marker,\r\n        showingInfoWindow: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"map\">\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={5}\r\n          initialCenter={{\r\n            lat: 60.192059,\r\n            lng: 24.945831,\r\n          }}\r\n        >\r\n          {this.props.placesByQuery.length > 0 ||\r\n          this.props.keywordSearchQuery.length\r\n            ? this.props.placesByQuery.map(place => (\r\n                <Marker\r\n                  key={place.id}\r\n                  position={{ lat: place.latitude, lng: place.longitude }}\r\n                  title={place.title}\r\n                  place_={place}\r\n                  onClick={this.toggleInfoWindow}\r\n                />\r\n              ))\r\n            : this.props.places.map(place => (\r\n                <Marker\r\n                  key={place.id}\r\n                  position={{ lat: place.latitude, lng: place.longitude }}\r\n                  title={place.title}\r\n                  place_={place}\r\n                  onClick={this.toggleInfoWindow}\r\n                />\r\n              ))}\r\n          <InfoWindowEx\r\n            marker={this.state.activeMarker}\r\n            visible={this.state.showingInfoWindow}\r\n          >\r\n            <div className=\"infoWindow\">\r\n              <h3>{this.state.selectedPlace.title}</h3>\r\n              <p>{this.state.selectedPlace.description}</p>\r\n              <p>Open: {this.state.selectedPlace.openingHours}</p>\r\n            </div>\r\n          </InfoWindowEx>\r\n        </Map>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MapContainer = connect(mapStateToProps)(ConnectedContainer)\r\n\r\nexport default GoogleApiWrapper(props => ({\r\n  // apiKey: props.apiKey\r\n}))(MapContainer)\r\n","import React, { Component } from 'react'\r\nimport mapService from '../services/maps'\r\nimport MapContainer from './MapContainer'\r\n\r\nexport class GoogleMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      apiKey: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    mapService.getApiKey().then(apiKey => {\r\n      this.setState({ apiKey })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return this.state.apiKey ? (\r\n      <MapContainer apiKey={this.state.apiKey} />\r\n    ) : null\r\n  }\r\n}\r\n\r\nexport default GoogleMap\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/places/'\r\n\r\nconst getPlaces = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst getPlace = id => {\r\n  const request = axios.get(baseUrl + id)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst createPlace = place => {\r\n  const request = axios.post(baseUrl, place)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst deletePlace = id => {\r\n  const request = axios.delete(baseUrl + id)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst updatePlace = place => {\r\n  const request = axios.put(baseUrl + place.id, place)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nexport default {\r\n  getPlaces,\r\n  getPlace,\r\n  createPlace,\r\n  deletePlace,\r\n  updatePlace,\r\n}\r\n","import {\r\n  CREATE_PLACE,\r\n  DELETE_PLACE,\r\n  UPDATE_PLACE,\r\n  FETCH_PLACES_BEGIN,\r\n  FETCH_PLACES_SUCCESS,\r\n  FETCH_PLACES_FAILURE,\r\n  PLACES_BY_QUERY,\r\n  ADD_KEYWORD_TO_PLACE,\r\n  DELETE_KEYWORD_FROM_PLACE,\r\n  UPDATE_KEYWORD_FOR_PLACE,\r\n} from '../constants/PlaceConstants'\r\nimport placeService from '../services/places'\r\n\r\nexport function fetchPlaces() {\r\n  return async dispatch => {\r\n    dispatch(fetchPlacesBegin())\r\n    try {\r\n      const res = await placeService.getPlaces()\r\n      dispatch(fetchPlacesSuccess(res))\r\n      return res\r\n    } catch (error) {\r\n      return dispatch(fetchPlacesFailure(error))\r\n    }\r\n  }\r\n}\r\n\r\nexport const addKeywordToPlace = keyword => ({\r\n  type: ADD_KEYWORD_TO_PLACE,\r\n  data: { keyword },\r\n})\r\n\r\nexport const deleteKeywordFromPlace = content => ({\r\n  type: DELETE_KEYWORD_FROM_PLACE,\r\n  data: {\r\n    keyword: content.keyword,\r\n    place: content.place,\r\n  },\r\n})\r\n\r\nexport const updateKeywordForPlace = keyword => ({\r\n  type: UPDATE_KEYWORD_FOR_PLACE,\r\n  data: { keyword },\r\n})\r\n\r\nexport const getPlacesByQuery = (placesByQuery, keywordSearchQuery) => ({\r\n  type: PLACES_BY_QUERY,\r\n  data: {\r\n    placesByQuery,\r\n    keywordSearchQuery,\r\n  },\r\n})\r\n\r\nexport const createPlace = content => {\r\n  const place = {\r\n    title: content.title,\r\n    description: content.description,\r\n    latitude: content.latitude,\r\n    longitude: content.longitude,\r\n    openingHours: content.openingHours,\r\n  }\r\n\r\n  return dispatch => {\r\n    placeService\r\n      .createPlace(place)\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      .then(res => {\r\n        dispatch(dispatchCreatePlace(res))\r\n      })\r\n  }\r\n}\r\n\r\nexport const deletePlace = id => {\r\n  return dispatch => {\r\n    placeService\r\n      .deletePlace(id)\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      .then(res => {\r\n        dispatch(dispatchDeletePlace(id))\r\n      })\r\n  }\r\n}\r\n\r\nexport const updatePlace = place => {\r\n  return dispatch => {\r\n    placeService\r\n      .updatePlace(place)\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      .then(res => {\r\n        dispatch(dispatchUpdatePlace(place))\r\n      })\r\n  }\r\n}\r\n\r\nexport const fetchPlacesBegin = () => ({\r\n  type: FETCH_PLACES_BEGIN,\r\n})\r\n\r\nexport const fetchPlacesSuccess = places => ({\r\n  type: FETCH_PLACES_SUCCESS,\r\n  data: { places },\r\n})\r\n\r\nexport const fetchPlacesFailure = error => ({\r\n  type: FETCH_PLACES_FAILURE,\r\n  data: { error },\r\n})\r\n\r\nconst dispatchCreatePlace = place => {\r\n  return {\r\n    type: CREATE_PLACE,\r\n    data: {\r\n      id: place.id,\r\n      title: place.title,\r\n      description: place.description,\r\n      latitude: place.latitude,\r\n      longitude: place.longitude,\r\n      openingHours: place.openingHours,\r\n    },\r\n  }\r\n}\r\n\r\nconst dispatchDeletePlace = id => {\r\n  return {\r\n    type: DELETE_PLACE,\r\n    data: { id: id },\r\n  }\r\n}\r\n\r\nconst dispatchUpdatePlace = place => {\r\n  return {\r\n    type: UPDATE_PLACE,\r\n    data: { place: place },\r\n  }\r\n}\r\n","export const CREATE_PLACE = 'CREATE_PLACE'\r\nexport const DELETE_PLACE = 'DELETE_PLACE'\r\nexport const UPDATE_PLACE = 'UPDATE_PLACE'\r\nexport const FETCH_PLACES_BEGIN = 'FETCH_PLACES_BEGIN'\r\nexport const FETCH_PLACES_SUCCESS = 'FETCH_PLACES_SUCCESS'\r\nexport const FETCH_PLACES_FAILURE = 'FETCH_PLACES_FAILURE'\r\nexport const PLACES_BY_QUERY = 'PLACES_BY_QUERY'\r\nexport const ADD_KEYWORD_TO_PLACE = 'ADD_KEYWORD_TO_PLACE'\r\nexport const DELETE_KEYWORD_FROM_PLACE = 'DELETE_KEYWORD_FROM_PLACE'\r\nexport const UPDATE_KEYWORD_FOR_PLACE = 'UPDATE_KEYWORD_FOR_PLACE'\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createPlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createPlace: place => dispatch(createPlace(place)),\r\n  }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n  var labels = document.getElementsByTagName('LABEL')\r\n  for (var i = 0; i < labels.length; i++) {\r\n    if (labels[i].htmlFor === inputId) {\r\n      var input = document.getElementById(labels[i].htmlFor)\r\n      if (input) input.label = labels[i]\r\n      input.label.style.color = color\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n  var input = document.getElementById(inputId)\r\n  input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedPlaceForm extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      title: '',\r\n      description: '',\r\n      latitude: '',\r\n      longitude: '',\r\n      openingHours: '',\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.toggleFormDisplay = this.toggleFormDisplay.bind(this)\r\n    this.hideForm = this.hideForm.bind(this)\r\n    this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n    this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n    this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n    this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.id]: event.target.value,\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    const title = this.state.title\r\n    const description = this.state.description\r\n    const latitude = this.state.latitude\r\n    const longitude = this.state.longitude\r\n    const openingHours = this.state.openingHours\r\n\r\n    this.props.createPlace({\r\n      title,\r\n      description,\r\n      latitude,\r\n      longitude,\r\n      openingHours,\r\n    })\r\n\r\n    this.setState({\r\n      title: '',\r\n      description: '',\r\n      latitude: '',\r\n      longitude: '',\r\n      openingHours: '',\r\n    })\r\n\r\n    this.hideForm()\r\n  }\r\n\r\n  toggleFormDisplay(event) {\r\n    event.preventDefault()\r\n\r\n    let form = document.getElementById('createPlaceForm')\r\n\r\n    form.style.display === 'none'\r\n      ? event.target.classList.add('goldenButton')\r\n      : event.target.classList.remove('goldenButton')\r\n\r\n    form.style.display === 'none'\r\n      ? (form.style.display = 'block')\r\n      : (form.style.display = 'none')\r\n    document.getElementById('title').focus()\r\n  }\r\n\r\n  hideForm() {\r\n    let form = document.getElementById('createPlaceForm')\r\n    form.style.display = 'none'\r\n\r\n    let button = document.getElementById('addPlaceButton')\r\n    button.classList.remove('goldenButton')\r\n  }\r\n\r\n  handleMouseOverInput(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.id, 'gold')\r\n    changeInputColor(event.target.id, 'gold')\r\n  }\r\n\r\n  handleMouseOutInput(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.id, 'orange')\r\n    changeInputColor(event.target.id, 'orange')\r\n  }\r\n\r\n  handleMouseOverLabel(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.htmlFor, 'gold')\r\n    changeInputColor(event.target.htmlFor, 'gold')\r\n  }\r\n\r\n  handleMouseOutLabel(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.htmlFor, 'orange')\r\n    changeInputColor(event.target.htmlFor, 'orange')\r\n  }\r\n\r\n  render() {\r\n    const formStyle = {\r\n      display: 'none',\r\n    }\r\n\r\n    return (\r\n      <div className=\"placeForm\">\r\n        <button\r\n          onClick={this.toggleFormDisplay}\r\n          className=\"addPlaceButton\"\r\n          id=\"addPlaceButton\"\r\n        >\r\n          Add place\r\n        </button>\r\n        <div className=\"createPlaceForm\" id=\"createPlaceForm\" style={formStyle}>\r\n          <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n            <div className=\"createPlaceFormRow\">\r\n              <label\r\n                htmlFor=\"title\"\r\n                className=\"createPlaceLabel\"\r\n                onMouseOver={this.handleMouseOverLabel}\r\n                onMouseOut={this.handleMouseOutLabel}\r\n              >\r\n                Title\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"createPlaceInput\"\r\n                id=\"title\"\r\n                value={this.state.title}\r\n                onChange={this.handleChange}\r\n                onMouseOver={this.handleMouseOverInput}\r\n                onMouseOut={this.handleMouseOutInput}\r\n              />\r\n            </div>\r\n            <div className=\"createPlaceFormRow\">\r\n              <label\r\n                htmlFor=\"description\"\r\n                className=\"createPlaceLabel\"\r\n                onMouseOver={this.handleMouseOverLabel}\r\n                onMouseOut={this.handleMouseOutLabel}\r\n              >\r\n                Description\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"createPlaceInput\"\r\n                id=\"description\"\r\n                value={this.state.description}\r\n                onChange={this.handleChange}\r\n                onMouseOver={this.handleMouseOverInput}\r\n                onMouseOut={this.handleMouseOutInput}\r\n              />\r\n            </div>\r\n            <div className=\"createPlaceFormRow\">\r\n              <label\r\n                htmlFor=\"latitude\"\r\n                className=\"createPlaceLabel\"\r\n                onMouseOver={this.handleMouseOverLabel}\r\n                onMouseOut={this.handleMouseOutLabel}\r\n              >\r\n                Latitude\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"createPlaceInput\"\r\n                id=\"latitude\"\r\n                value={this.state.latitude}\r\n                onChange={this.handleChange}\r\n                onMouseOver={this.handleMouseOverInput}\r\n                onMouseOut={this.handleMouseOutInput}\r\n              />\r\n            </div>\r\n            <div className=\"createPlaceFormRow\">\r\n              <label\r\n                htmlFor=\"longitude\"\r\n                className=\"createPlaceLabel\"\r\n                onMouseOver={this.handleMouseOverLabel}\r\n                onMouseOut={this.handleMouseOutLabel}\r\n              >\r\n                Longitude\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"createPlaceInput\"\r\n                id=\"longitude\"\r\n                value={this.state.longitude}\r\n                onChange={this.handleChange}\r\n                onMouseOver={this.handleMouseOverInput}\r\n                onMouseOut={this.handleMouseOutInput}\r\n              />\r\n            </div>\r\n            <div className=\"createPlaceFormRow\">\r\n              <label\r\n                htmlFor=\"openingHours\"\r\n                className=\"createPlaceLabel\"\r\n                onMouseOver={this.handleMouseOverLabel}\r\n                onMouseOut={this.handleMouseOutLabel}\r\n              >\r\n                Opening hours\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"createPlaceInput\"\r\n                id=\"openingHours\"\r\n                value={this.state.openingHours}\r\n                onChange={this.handleChange}\r\n                onMouseOver={this.handleMouseOverInput}\r\n                onMouseOut={this.handleMouseOutInput}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"createPlaceSaveButton\">\r\n              Save place\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst PlaceForm = connect(null, mapDispatchToProps)(ConnectedPlaceForm)\r\n\r\nexport default PlaceForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/keywords/'\r\n\r\nconst getKeywords = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst getKeyword = id => {\r\n  const request = axios.get(baseUrl + id)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst createKeyword = keyword => {\r\n  const request = axios.post(baseUrl, keyword)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst deleteKeyword = content => {\r\n  const request = axios.delete(\r\n    baseUrl + content.keyword.id + '/' + content.place.id\r\n  )\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst updateKeyword = keyword => {\r\n  const request = axios.put(baseUrl + keyword.id, keyword)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nexport default {\r\n  getKeywords,\r\n  getKeyword,\r\n  createKeyword,\r\n  deleteKeyword,\r\n  updateKeyword,\r\n}\r\n","import {\r\n  CREATE_KEYWORD,\r\n  DELETE_KEYWORD,\r\n  UPDATE_KEYWORD,\r\n  FETCH_KEYWORDS_BEGIN,\r\n  FETCH_KEYWORDS_SUCCESS,\r\n  FETCH_KEYWORDS_FAILURE,\r\n} from '../constants/KeywordConstants'\r\nimport keywordService from '../services/keywords'\r\nimport {\r\n  addKeywordToPlace,\r\n  deleteKeywordFromPlace,\r\n  updateKeywordForPlace,\r\n} from './PlaceActions'\r\n\r\nexport function fetchKeywords() {\r\n  return async dispatch => {\r\n    dispatch(fetchKeywordsBegin())\r\n    try {\r\n      const res = await keywordService.getKeywords()\r\n      dispatch(fetchKeywordsSuccess(res))\r\n      return res\r\n    } catch (error) {\r\n      return dispatch(fetchKeywordsFailure(error))\r\n    }\r\n  }\r\n}\r\n\r\nexport const createKeyword = content => {\r\n  const keyword = {\r\n    title: content.title,\r\n    placeId: content.placeId,\r\n  }\r\n\r\n  return dispatch => {\r\n    keywordService\r\n      .createKeyword(keyword)\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      .then(res => {\r\n        dispatch(dispatchCreateKeyword(res))\r\n        dispatch(addKeywordToPlace(res))\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteKeyword = content => {\r\n  return dispatch => {\r\n    keywordService\r\n      .deleteKeyword(content)\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      .then(res => {\r\n        dispatch(dispatchDeleteKeyword(content))\r\n        dispatch(deleteKeywordFromPlace(content))\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateKeyword = keyword => {\r\n  return dispatch => {\r\n    keywordService\r\n      .updateKeyword(keyword)\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n      .then(res => {\r\n        dispatch(dispatchUpdateKeyword(res))\r\n        dispatch(updateKeywordForPlace(res))\r\n      })\r\n  }\r\n}\r\n\r\nexport const fetchKeywordsBegin = () => ({\r\n  type: FETCH_KEYWORDS_BEGIN,\r\n})\r\n\r\nexport const fetchKeywordsSuccess = keywords => ({\r\n  type: FETCH_KEYWORDS_SUCCESS,\r\n  data: { keywords },\r\n})\r\n\r\nexport const fetchKeywordsFailure = error => ({\r\n  type: FETCH_KEYWORDS_FAILURE,\r\n  data: { error },\r\n})\r\n\r\nconst dispatchCreateKeyword = keyword => {\r\n  return {\r\n    type: CREATE_KEYWORD,\r\n    data: {\r\n      title: keyword.title,\r\n      id: keyword.id,\r\n      place: keyword.place,\r\n    },\r\n  }\r\n}\r\n\r\nconst dispatchDeleteKeyword = content => {\r\n  return {\r\n    type: DELETE_KEYWORD,\r\n    data: { id: content.keyword.id },\r\n  }\r\n}\r\n\r\nconst dispatchUpdateKeyword = keyword => {\r\n  return {\r\n    type: UPDATE_KEYWORD,\r\n    data: { keyword: keyword },\r\n  }\r\n}\r\n","export const CREATE_KEYWORD = 'CREATE_KEYWORD'\r\nexport const DELETE_KEYWORD = 'DELETE_KEYWORD'\r\nexport const UPDATE_KEYWORD = 'UPDATE_KEYWORD'\r\nexport const FETCH_KEYWORDS_BEGIN = 'FETCH_KEYWORDS_BEGIN'\r\nexport const FETCH_KEYWORDS_SUCCESS = 'FETCH_KEYWORDS_SUCCESS'\r\nexport const FETCH_KEYWORDS_FAILURE = 'FETCH_KEYWORDS_FAILURE'\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateKeyword } from '../actions/KeywordActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    updateKeyword: keyword => dispatch(updateKeyword(keyword)),\r\n  }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n  var labels = document.getElementsByTagName('LABEL')\r\n  for (var i = 0; i < labels.length; i++) {\r\n    if (labels[i].htmlFor === inputId) {\r\n      var input = document.getElementById(labels[i].htmlFor)\r\n      if (input) input.label = labels[i]\r\n      input.label.style.color = color\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n  var input = document.getElementById(inputId)\r\n  input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedUpdateKeywordForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      updateKeywordTitle: '',\r\n      id: '',\r\n      placeId: '',\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleUpdate = this.handleUpdate.bind(this)\r\n    this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n    this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n    this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n    this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      updateKeywordTitle: this.props.keyword.title,\r\n      id: this.props.keyword.id,\r\n      placeId: this.props.place.id,\r\n    })\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.dataset.id]: event.target.value,\r\n    })\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    event.preventDefault()\r\n\r\n    this.props.updateKeyword({\r\n      title: this.state.updateKeywordTitle,\r\n      id: this.state.id,\r\n    })\r\n\r\n    this.setState({\r\n      updateKeywordTitle: '',\r\n    })\r\n\r\n    this.props.hideUpdateKeyword()\r\n  }\r\n\r\n  handleMouseOverInput(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.id, 'gold')\r\n    changeInputColor(event.target.id, 'gold')\r\n  }\r\n\r\n  handleMouseOutInput(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.id, 'orange')\r\n    changeInputColor(event.target.id, 'orange')\r\n  }\r\n\r\n  handleMouseOverLabel(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.htmlFor, 'gold')\r\n    changeInputColor(event.target.htmlFor, 'gold')\r\n  }\r\n\r\n  handleMouseOutLabel(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.htmlFor, 'orange')\r\n    changeInputColor(event.target.htmlFor, 'orange')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"updateKeywordForm\" id=\"updateKeywordForm\">\r\n        <form onSubmit={this.handleUpdate} autoComplete=\"off\">\r\n          <div className=\"updateKeywordFormRow\">\r\n            <label\r\n              htmlFor={'updateKeywordTitle' + this.state.id}\r\n              className=\"updateKeywordLabel\"\r\n              onMouseOver={this.handleMouseOverLabel}\r\n              onMouseOut={this.handleMouseOutLabel}\r\n            >\r\n              Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"updateKeywordInput\"\r\n              id={'updateKeywordTitle' + this.state.id}\r\n              data-id=\"updateKeywordTitle\"\r\n              value={this.state.updateKeywordTitle}\r\n              onChange={this.handleChange}\r\n              onMouseOver={this.handleMouseOverInput}\r\n              onMouseOut={this.handleMouseOutInput}\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"updateKeywordSaveButton\">\r\n            Save keyword\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst UpdateKeywordForm = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ConnectedUpdateKeywordForm)\r\n\r\nexport default UpdateKeywordForm\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteKeyword } from '../actions/KeywordActions'\r\nimport UpdateKeywordForm from './UpdateKeywordForm'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteKeyword: id => dispatch(deleteKeyword(id)),\r\n  }\r\n}\r\n\r\nclass ConnectedKeyword extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      showKeyword: false,\r\n      showKeywordForm: false,\r\n    }\r\n\r\n    this.handleDeleteKeyword = this.handleDeleteKeyword.bind(this)\r\n    this.toggleShowKeyword = this.toggleShowKeyword.bind(this)\r\n    this.toggleUpdateKeyword = this.toggleUpdateKeyword.bind(this)\r\n    this.hideUpdateKeyword = this.hideUpdateKeyword.bind(this)\r\n  }\r\n\r\n  handleDeleteKeyword() {\r\n    this.props.deleteKeyword({\r\n      keyword: this.props.keyword,\r\n      place: this.props.place,\r\n    })\r\n  }\r\n\r\n  toggleShowKeyword() {\r\n    const titleText = document.getElementById(\r\n      'keywordListTitle' + this.props.keyword.id\r\n    )\r\n    const keywordDiv = document.getElementById(\r\n      'keywordListObject' + this.props.keyword.id\r\n    )\r\n\r\n    if (this.state.showKeyword) {\r\n      titleText.style.color = 'orange'\r\n      keywordDiv.classList.remove('linearGradient')\r\n      this.hideUpdateKeyword()\r\n    } else {\r\n      titleText.style.color = 'gold'\r\n      keywordDiv.classList.add('linearGradient')\r\n    }\r\n\r\n    this.setState({ showKeyword: !this.state.showKeyword })\r\n  }\r\n\r\n  toggleUpdateKeyword = event => {\r\n    event.preventDefault()\r\n\r\n    !this.state.showKeywordForm\r\n      ? event.target.classList.add('goldenButton')\r\n      : event.target.classList.remove('goldenButton')\r\n    this.setState({ showKeywordForm: !this.state.showKeywordForm })\r\n  }\r\n\r\n  hideUpdateKeyword() {\r\n    this.setState({\r\n      showKeywordForm: false,\r\n    })\r\n\r\n    let button = document.getElementById('updateKeywordButton')\r\n    button.classList.remove('goldenButton')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        key={this.props.keyword.id}\r\n        className=\"keywordListObject\"\r\n        id={'keywordListObject' + this.props.keyword.id}\r\n      >\r\n        <span\r\n          onClick={this.toggleShowKeyword}\r\n          className=\"keywordListTitle\"\r\n          id={'keywordListTitle' + this.props.keyword.id}\r\n        >\r\n          {this.props.keyword.title}\r\n        </span>\r\n        {this.state.showKeyword ? (\r\n          <div className=\"keywordInfo\">\r\n            <div className=\"keywordButtons\">\r\n              <button\r\n                onClick={this.handleDeleteKeyword}\r\n                className=\"deleteKeywordButton\"\r\n              >\r\n                Delete keyword\r\n              </button>\r\n              <button\r\n                onClick={this.toggleUpdateKeyword}\r\n                className=\"updateKeywordButton\"\r\n                id=\"updateKeywordButton\"\r\n              >\r\n                Update keyword\r\n              </button>\r\n            </div>\r\n            {this.state.showKeywordForm ? (\r\n              <UpdateKeywordForm\r\n                keyword={this.props.keyword}\r\n                place={this.props.place}\r\n                hideUpdateKeyword={this.hideUpdateKeyword}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Keyword = connect(null, mapDispatchToProps)(ConnectedKeyword)\r\n\r\nexport default Keyword\r\n","import React from 'react'\r\nimport Keyword from './Keyword'\r\nimport { connect } from 'react-redux'\r\nimport { fetchKeywords } from '../actions/KeywordActions'\r\n\r\nconst mapStateToProps = state => ({\r\n  keywords: state.keywordReducer.keywords,\r\n  loading: state.keywordReducer.loading,\r\n  error: state.keywordReducer.error,\r\n})\r\n\r\nclass ConnectedKeywordList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchKeywords())\r\n  }\r\n\r\n  render() {\r\n    const { error, loading, keywords } = this.props\r\n    if (error) {\r\n      return <div>Error! {error.message}</div>\r\n    }\r\n    if (loading && keywords.length > 0) {\r\n      return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"keywordsList\">\r\n        <p className=\"keywordList\">Keywords:</p>\r\n        {keywords\r\n          ? keywords.map(keyword =>\r\n              keyword.place && keyword.place._id === this.props.place.id ? (\r\n                <Keyword\r\n                  key={keyword.id}\r\n                  keyword={keyword}\r\n                  place={this.props.place}\r\n                />\r\n              ) : null\r\n            )\r\n          : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst KeywordList = connect(mapStateToProps)(ConnectedKeywordList)\r\n\r\nexport default KeywordList\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createKeyword } from '../actions/KeywordActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createKeyword: keyword => dispatch(createKeyword(keyword)),\r\n  }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n  var labels = document.getElementsByTagName('LABEL')\r\n  for (var i = 0; i < labels.length; i++) {\r\n    if (labels[i].htmlFor === inputId) {\r\n      var input = document.getElementById(labels[i].htmlFor)\r\n      if (input) input.label = labels[i]\r\n      input.label.style.color = color\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n  var input = document.getElementById(inputId)\r\n  input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedKeywordForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      keywordTitle: '',\r\n      placeId: '',\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.toggleFormDisplay = this.toggleFormDisplay.bind(this)\r\n    this.hideForm = this.hideForm.bind(this)\r\n    this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n    this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n    this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n    this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ placeId: this.props.place.id })\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.dataset.id]: event.target.value,\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    const keywordTitle = this.state.keywordTitle\r\n\r\n    this.props.createKeyword({\r\n      title: keywordTitle,\r\n      placeId: this.state.placeId,\r\n    })\r\n\r\n    this.setState({\r\n      keywordTitle: '',\r\n    })\r\n\r\n    this.hideForm()\r\n  }\r\n\r\n  toggleFormDisplay(event) {\r\n    event.preventDefault()\r\n\r\n    let form = document.getElementById('createKeywordForm' + this.state.placeId)\r\n\r\n    form.style.display === 'none'\r\n      ? event.target.classList.add('goldenButton')\r\n      : event.target.classList.remove('goldenButton')\r\n\r\n    form.style.display === 'none'\r\n      ? (form.style.display = 'block')\r\n      : (form.style.display = 'none')\r\n    document.getElementById('keywordTitle' + this.state.placeId).focus()\r\n  }\r\n\r\n  hideForm() {\r\n    let form = document.getElementById('createKeywordForm' + this.state.placeId)\r\n    form.style.display = 'none'\r\n\r\n    let button = document.getElementById(\r\n      'addKeywordButton' + this.state.placeId\r\n    )\r\n    button.classList.remove('goldenButton')\r\n  }\r\n\r\n  handleMouseOverInput(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.id, 'gold')\r\n    changeInputColor(event.target.id, 'gold')\r\n  }\r\n\r\n  handleMouseOutInput(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.id, 'orange')\r\n    changeInputColor(event.target.id, 'orange')\r\n  }\r\n\r\n  handleMouseOverLabel(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.htmlFor, 'gold')\r\n    changeInputColor(event.target.htmlFor, 'gold')\r\n  }\r\n\r\n  handleMouseOutLabel(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.htmlFor, 'orange')\r\n    changeInputColor(event.target.htmlFor, 'orange')\r\n  }\r\n\r\n  render() {\r\n    const formStyle = {\r\n      display: 'none',\r\n    }\r\n\r\n    return (\r\n      <div className=\"keywordForm\">\r\n        <button\r\n          onClick={this.toggleFormDisplay}\r\n          className=\"addKeywordButton\"\r\n          id={'addKeywordButton' + this.state.placeId}\r\n        >\r\n          Add keyword\r\n        </button>\r\n        <div\r\n          className=\"createKeywordForm\"\r\n          id={'createKeywordForm' + this.state.placeId}\r\n          style={formStyle}\r\n        >\r\n          <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n            <div className=\"createKeywordFormRow\">\r\n              <label\r\n                htmlFor={'keywordTitle' + this.state.placeId}\r\n                className=\"createKeywordLabel\"\r\n                onMouseOver={this.handleMouseOverLabel}\r\n                onMouseOut={this.handleMouseOutLabel}\r\n              >\r\n                Title\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"createKeywordInput\"\r\n                id={'keywordTitle' + this.state.placeId}\r\n                value={this.state.keywordTitle}\r\n                data-id=\"keywordTitle\"\r\n                onChange={this.handleChange}\r\n                onMouseOver={this.handleMouseOverInput}\r\n                onMouseOut={this.handleMouseOutInput}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"createKeywordSaveButton\">\r\n              Save keyword\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst KeywordForm = connect(null, mapDispatchToProps)(ConnectedKeywordForm)\r\n\r\nexport default KeywordForm\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updatePlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    updatePlace: place => dispatch(updatePlace(place)),\r\n  }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n  var labels = document.getElementsByTagName('LABEL')\r\n  for (var i = 0; i < labels.length; i++) {\r\n    if (labels[i].htmlFor === inputId) {\r\n      var input = document.getElementById(labels[i].htmlFor)\r\n      if (input) input.label = labels[i]\r\n      input.label.style.color = color\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n  var input = document.getElementById(inputId)\r\n  input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedUpdatePlaceForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      updateTitle: '',\r\n      updateDescription: '',\r\n      updateLatitude: '',\r\n      updateLongitude: '',\r\n      updateOpeningHours: '',\r\n      id: '',\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleUpdate = this.handleUpdate.bind(this)\r\n    this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n    this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n    this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n    this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      updateTitle: this.props.place.title,\r\n      updateDescription: this.props.place.description,\r\n      updateLatitude: this.props.place.latitude,\r\n      updateLongitude: this.props.place.longitude,\r\n      updateOpeningHours: this.props.place.openingHours,\r\n      id: this.props.place.id,\r\n    })\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.dataset.id]: event.target.value,\r\n    })\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    event.preventDefault()\r\n\r\n    this.props.updatePlace({\r\n      title: this.state.updateTitle,\r\n      description: this.state.updateDescription,\r\n      latitude: this.state.updateLatitude,\r\n      longitude: this.state.updateLongitude,\r\n      openingHours: this.state.updateOpeningHours,\r\n      id: this.state.id,\r\n      keywords: this.props.place.keywords,\r\n    })\r\n\r\n    this.setState({\r\n      updateTitle: '',\r\n      updateDescription: '',\r\n      updateLatitude: '',\r\n      updateLongitude: '',\r\n      updateOpeningHours: '',\r\n    })\r\n\r\n    this.props.hideUpdatePlace()\r\n  }\r\n\r\n  handleMouseOverInput(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.id, 'gold')\r\n    changeInputColor(event.target.id, 'gold')\r\n  }\r\n\r\n  handleMouseOutInput(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.id, 'orange')\r\n    changeInputColor(event.target.id, 'orange')\r\n  }\r\n\r\n  handleMouseOverLabel(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.htmlFor, 'gold')\r\n    changeInputColor(event.target.htmlFor, 'gold')\r\n  }\r\n\r\n  handleMouseOutLabel(event) {\r\n    event.preventDefault()\r\n    changeLabelColor(event.target.htmlFor, 'orange')\r\n    changeInputColor(event.target.htmlFor, 'orange')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"updatePlaceForm\" id=\"updatePlaceForm\">\r\n        <form onSubmit={this.handleUpdate} autoComplete=\"off\">\r\n          <div className=\"updatePlaceFormRow\">\r\n            <label\r\n              htmlFor={'updateTitle' + this.state.id}\r\n              className=\"updatePlaceLabel\"\r\n              onMouseOver={this.handleMouseOverLabel}\r\n              onMouseOut={this.handleMouseOutLabel}\r\n            >\r\n              Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"updatePlaceInput\"\r\n              id={'updateTitle' + this.state.id}\r\n              data-id=\"updateTitle\"\r\n              value={this.state.updateTitle}\r\n              onChange={this.handleChange}\r\n              onMouseOver={this.handleMouseOverInput}\r\n              onMouseOut={this.handleMouseOutInput}\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"updatePlaceFormRow\">\r\n            <label\r\n              htmlFor={'updateDescription' + this.state.id}\r\n              className=\"updatePlaceLabel\"\r\n              onMouseOver={this.handleMouseOverLabel}\r\n              onMouseOut={this.handleMouseOutLabel}\r\n            >\r\n              Description\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"updatePlaceInput\"\r\n              id={'updateDescription' + this.state.id}\r\n              data-id=\"updateDescription\"\r\n              value={this.state.updateDescription}\r\n              onChange={this.handleChange}\r\n              onMouseOver={this.handleMouseOverInput}\r\n              onMouseOut={this.handleMouseOutInput}\r\n            />\r\n          </div>\r\n          <div className=\"updatePlaceFormRow\">\r\n            <label\r\n              htmlFor={'updateLatitude' + this.state.id}\r\n              className=\"updatePlaceLabel\"\r\n              onMouseOver={this.handleMouseOverLabel}\r\n              onMouseOut={this.handleMouseOutLabel}\r\n            >\r\n              Latitude\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"updatePlaceInput\"\r\n              id={'updateLatitude' + this.state.id}\r\n              data-id=\"updateLatitude\"\r\n              value={this.state.updateLatitude}\r\n              onChange={this.handleChange}\r\n              onMouseOver={this.handleMouseOverInput}\r\n              onMouseOut={this.handleMouseOutInput}\r\n            />\r\n          </div>\r\n          <div className=\"updatePlaceFormRow\">\r\n            <label\r\n              htmlFor={'updateLongitude' + this.state.id}\r\n              className=\"updatePlaceLabel\"\r\n              onMouseOver={this.handleMouseOverLabel}\r\n              onMouseOut={this.handleMouseOutLabel}\r\n            >\r\n              Longitude\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"updatePlaceInput\"\r\n              id={'updateLongitude' + this.state.id}\r\n              data-id=\"updateLongitude\"\r\n              value={this.state.updateLongitude}\r\n              onChange={this.handleChange}\r\n              onMouseOver={this.handleMouseOverInput}\r\n              onMouseOut={this.handleMouseOutInput}\r\n            />\r\n          </div>\r\n          <div className=\"updatePlaceFormRow\">\r\n            <label\r\n              htmlFor={'updateOpeningHours' + this.state.id}\r\n              className=\"updatePlaceLabel\"\r\n              onMouseOver={this.handleMouseOverLabel}\r\n              onMouseOut={this.handleMouseOutLabel}\r\n            >\r\n              Opening hours\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"updatePlaceInput\"\r\n              id={'updateOpeningHours' + this.state.id}\r\n              data-id=\"updateOpeningHours\"\r\n              value={this.state.updateOpeningHours}\r\n              onChange={this.handleChange}\r\n              onMouseOver={this.handleMouseOverInput}\r\n              onMouseOut={this.handleMouseOutInput}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"updatePlaceSaveButton\">\r\n            Save place\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst UpdatePlaceForm = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ConnectedUpdatePlaceForm)\r\n\r\nexport default UpdatePlaceForm\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deletePlace } from '../actions/PlaceActions'\r\nimport KeywordList from './KeywordList'\r\nimport KeywordForm from './KeywordForm'\r\nimport UpdatePlaceForm from './UpdatePlaceForm'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deletePlace: id => dispatch(deletePlace(id)),\r\n  }\r\n}\r\n\r\nclass ConnectedPlace extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      showPlace: false,\r\n      showUpdateForm: false,\r\n    }\r\n\r\n    this.handleDeletePlace = this.handleDeletePlace.bind(this)\r\n    this.toggleShowPlace = this.toggleShowPlace.bind(this)\r\n    this.toggleUpdatePlace = this.toggleUpdatePlace.bind(this)\r\n    this.hideUpdatePlace = this.hideUpdatePlace.bind(this)\r\n  }\r\n\r\n  handleDeletePlace() {\r\n    this.props.deletePlace(this.props.place.id)\r\n  }\r\n\r\n  toggleShowPlace() {\r\n    const titleText = document.getElementById(\r\n      'placeListTitle' + this.props.place.id\r\n    )\r\n    const placeDiv = document.getElementById(\r\n      'placeListObject' + this.props.place.id\r\n    )\r\n\r\n    if (this.state.showPlace) {\r\n      titleText.style.color = 'orange'\r\n      placeDiv.classList.remove('linearGradient')\r\n      this.hideUpdatePlace()\r\n    } else {\r\n      titleText.style.color = 'gold'\r\n      placeDiv.classList.add('linearGradient')\r\n    }\r\n\r\n    this.setState({ showPlace: !this.state.showPlace })\r\n  }\r\n\r\n  toggleUpdatePlace = event => {\r\n    event.preventDefault()\r\n\r\n    !this.state.showUpdateForm\r\n      ? event.target.classList.add('goldenButton')\r\n      : event.target.classList.remove('goldenButton')\r\n    this.setState({ showUpdateForm: !this.state.showUpdateForm })\r\n  }\r\n\r\n  hideUpdatePlace() {\r\n    this.setState({\r\n      showUpdateForm: false,\r\n    })\r\n\r\n    let button = document.getElementById('updatePlaceButton')\r\n    button.classList.remove('goldenButton')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        key={this.props.place.id}\r\n        className=\"placeListObject\"\r\n        id={'placeListObject' + this.props.place.id}\r\n      >\r\n        <span\r\n          onClick={this.toggleShowPlace}\r\n          className=\"placeListTitle\"\r\n          id={'placeListTitle' + this.props.place.id}\r\n        >\r\n          {this.props.place.title}\r\n        </span>\r\n        {this.state.showPlace ? (\r\n          <div className=\"placeInfo\">\r\n            <span>{this.props.place.description}</span>\r\n            <br />\r\n            <span>Open: {this.props.place.openingHours}</span>\r\n            <br />\r\n            <KeywordList place={this.props.place} />\r\n            <KeywordForm place={this.props.place} />\r\n            <div className=\"placeButtons\">\r\n              <button\r\n                onClick={this.handleDeletePlace}\r\n                className=\"deletePlaceButton\"\r\n              >\r\n                Delete place\r\n              </button>\r\n              <button\r\n                onClick={this.toggleUpdatePlace}\r\n                className=\"updatePlaceButton\"\r\n                id=\"updatePlaceButton\"\r\n              >\r\n                Update place\r\n              </button>\r\n            </div>\r\n            {this.state.showUpdateForm ? (\r\n              <UpdatePlaceForm\r\n                place={this.props.place}\r\n                hideUpdatePlace={this.hideUpdatePlace}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Place = connect(null, mapDispatchToProps)(ConnectedPlace)\r\n\r\nexport default Place\r\n","import React from 'react'\r\nimport Place from './Place'\r\nimport { connect } from 'react-redux'\r\nimport { fetchPlaces } from '../actions/PlaceActions'\r\n\r\nconst mapStateToProps = state => ({\r\n  places: state.placeReducer.places,\r\n  placesByQuery: state.placeReducer.placesByQuery,\r\n  keywordSearchQuery: state.placeReducer.keywordSearchQuery,\r\n  loading: state.placeReducer.loading,\r\n  error: state.placeReducer.error,\r\n})\r\n\r\nclass ConnectedPlaceList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchPlaces())\r\n  }\r\n\r\n  render() {\r\n    const { error, loading, places } = this.props\r\n    if (error) {\r\n      return <div>Error! {error.message}</div>\r\n    }\r\n    if (loading && places.length > 0) {\r\n      return <div>Loading...</div>\r\n    }\r\n    return (\r\n      <div className=\"placesList\">\r\n        {this.props.placesByQuery.length > 0 ||\r\n        this.props.keywordSearchQuery.length > 0\r\n          ? this.props.placesByQuery.map(place => (\r\n              <Place key={place.id} place={place} />\r\n            ))\r\n          : this.props.places.map(place => (\r\n              <Place key={place.id} place={place} />\r\n            ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst PlaceList = connect(mapStateToProps)(ConnectedPlaceList)\r\n\r\nexport default PlaceList\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchPlaces, getPlacesByQuery } from '../actions/PlaceActions'\r\nimport { fetchKeywords } from '../actions/KeywordActions'\r\n\r\nconst mapStateToProps = state => ({\r\n  places: state.placeReducer.places,\r\n  placesByQuery: state.placeReducer.placesByQuery,\r\n  keywords: state.keywordReducer.keywords,\r\n  loading: state.placeReducer.loading,\r\n  error: state.placeReducer.error,\r\n})\r\n\r\nclass ConnectedKeywordSearch extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      keywordSearchQuery: '',\r\n      keywords: [],\r\n      uniqueKeywords: [],\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.toggleKeywordListDisplay = this.toggleKeywordListDisplay.bind(this)\r\n    this.getUniqueKeywordsByTitle = this.getUniqueKeywordsByTitle.bind(this)\r\n    this.searchByKeyword = this.searchByKeyword.bind(this)\r\n    this.dispatchPlacesByQuery = this.dispatchPlacesByQuery.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchPlaces())\r\n    this.props.dispatch(fetchKeywords())\r\n    this.setState({ keywords: this.props.keywords })\r\n  }\r\n\r\n  handleChange(event) {\r\n    const keywordSearchQuery = event.target.value\r\n    this.setState({\r\n      keywordSearchQuery,\r\n    })\r\n    this.dispatchPlacesByQuery(keywordSearchQuery)\r\n  }\r\n\r\n  toggleKeywordListDisplay() {\r\n    const button = document.getElementById('toggleKeywordListButton')\r\n    const list = document.getElementById('keywordList')\r\n    if (list.style.display === 'none') {\r\n      list.style.display = 'block'\r\n      button.innerHTML = 'Hide keywords'\r\n    } else {\r\n      list.style.display = 'none'\r\n      button.innerHTML = 'Show keywords'\r\n    }\r\n\r\n    !button.classList.contains('goldenButton')\r\n      ? button.classList.add('goldenButton')\r\n      : button.classList.remove('goldenButton')\r\n  }\r\n\r\n  getUniqueKeywordsByTitle(keywords) {\r\n    let uniqueKeywords = []\r\n\r\n    for (let i = 0; i < keywords.length; i++) {\r\n      let keywordAlreadyExists = false\r\n      for (let y = 0; y < uniqueKeywords.length; y++) {\r\n        if (uniqueKeywords[y].title === keywords[i].title) {\r\n          keywordAlreadyExists = true\r\n        }\r\n      }\r\n      if (!keywordAlreadyExists) {\r\n        uniqueKeywords.push(keywords[i])\r\n      }\r\n    }\r\n\r\n    return uniqueKeywords.sort((a, b) => a.title.localeCompare(b.title))\r\n  }\r\n\r\n  searchByKeyword = keyword => event => {\r\n    event.preventDefault()\r\n    this.setState({ keywordSearchQuery: keyword })\r\n    this.dispatchPlacesByQuery(keyword)\r\n  }\r\n\r\n  dispatchPlacesByQuery(keywordSearchQuery) {\r\n    let placesByQuery = []\r\n    // Compare search query to all keywords from places\r\n    this.props.places.map((place, index) => {\r\n      if (place.keywords) {\r\n        place.keywords.map(keyword =>\r\n          keywordSearchQuery.length > 0 &&\r\n          keyword.title\r\n            .toLowerCase()\r\n            .startsWith(keywordSearchQuery.toLowerCase())\r\n            ? !placesByQuery.includes(place)\r\n              ? (placesByQuery = placesByQuery.concat(place))\r\n              : null\r\n            : null\r\n        )\r\n      }\r\n      if (index === this.props.places.length - 1) {\r\n        this.props.dispatch(getPlacesByQuery(placesByQuery, keywordSearchQuery))\r\n      }\r\n      return null\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const listStyles = {\r\n      display: 'none',\r\n    }\r\n\r\n    const { error, loading, keywords } = this.props\r\n    if (error) {\r\n      return <div>Error! {error.message}</div>\r\n    }\r\n    if (loading && keywords.length > 0) {\r\n      return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"keywordSearch\">\r\n          <p>Search places with keywords</p>\r\n          <input\r\n            className=\"keywordSearchInput\"\r\n            id=\"keywordSearchQuery\"\r\n            onChange={this.handleChange}\r\n            value={this.state.keywordSearchQuery}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"keywordList\">\r\n          <button\r\n            onClick={this.toggleKeywordListDisplay}\r\n            className=\"toggleKeywordListButton\"\r\n            id=\"toggleKeywordListButton\"\r\n          >\r\n            Show keywords\r\n          </button>\r\n          <ul style={listStyles} id=\"keywordList\">\r\n            {this.getUniqueKeywordsByTitle(keywords).map(keyword => {\r\n              return (\r\n                <li\r\n                  key={keyword.id}\r\n                  className=\"keywordListItem\"\r\n                  onClick={this.searchByKeyword(keyword.title)}\r\n                >\r\n                  {keyword.title}\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst KeywordSearch = connect(mapStateToProps)(ConnectedKeywordSearch)\r\n\r\nexport default KeywordSearch\r\n","import React from 'react'\r\nimport GoogleMap from './components/GoogleMap'\r\nimport PlaceForm from './components/PlaceForm'\r\nimport PlaceList from './components/PlaceList'\r\nimport KeywordSearch from './components/KeywordSearch'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <GoogleMap />\r\n      <div id=\"alignedDivs\">\r\n        <div id=\"leftDiv\">\r\n          <PlaceForm />\r\n          <KeywordSearch />\r\n        </div>\r\n\r\n        <div id=\"rightDiv\">\r\n          <PlaceList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import {\r\n  CREATE_PLACE,\r\n  DELETE_PLACE,\r\n  UPDATE_PLACE,\r\n  FETCH_PLACES_BEGIN,\r\n  FETCH_PLACES_SUCCESS,\r\n  FETCH_PLACES_FAILURE,\r\n  PLACES_BY_QUERY,\r\n  ADD_KEYWORD_TO_PLACE,\r\n  DELETE_KEYWORD_FROM_PLACE,\r\n  UPDATE_KEYWORD_FOR_PLACE,\r\n} from '../constants/PlaceConstants'\r\n\r\nconst initialState = {\r\n  places: [],\r\n  placesByQuery: [],\r\n  keywordSearchQuery: '',\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nconst PlaceReducer = (state = initialState, action) => {\r\n  let places = state.places\r\n  switch (action.type) {\r\n    case FETCH_PLACES_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      }\r\n    case FETCH_PLACES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        places: action.data.places,\r\n      }\r\n    case FETCH_PLACES_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.data.error,\r\n        places: [],\r\n      }\r\n    case CREATE_PLACE:\r\n      let newPlace = action.data\r\n      newPlace.keywords = []\r\n      return Object.assign({}, state, {\r\n        places: state.places.concat(newPlace),\r\n      })\r\n    case DELETE_PLACE:\r\n      return Object.assign({}, state, {\r\n        places: state.places.filter(place => place.id !== action.data.id),\r\n      })\r\n    case UPDATE_PLACE:\r\n      return Object.assign({}, state, {\r\n        places: state.places.map(place =>\r\n          place.id !== action.data.place.id ? place : action.data.place\r\n        ),\r\n      })\r\n    case PLACES_BY_QUERY:\r\n      return Object.assign({}, state, {\r\n        placesByQuery: action.data.placesByQuery,\r\n        keywordSearchQuery: action.data.keywordSearchQuery,\r\n      })\r\n    case ADD_KEYWORD_TO_PLACE:\r\n      places = state.places\r\n      const keyword = {\r\n        _id: action.data.keyword.id,\r\n        title: action.data.keyword.title,\r\n      }\r\n      places.map(place =>\r\n        place.id === action.data.keyword.place._id\r\n          ? (place.keywords = place.keywords.concat(keyword))\r\n          : null\r\n      )\r\n      return Object.assign({}, state, {\r\n        places: places,\r\n      })\r\n    case DELETE_KEYWORD_FROM_PLACE:\r\n      let placeToEdit = action.data.place\r\n      placeToEdit.keywords = placeToEdit.keywords.filter(\r\n        keyword => keyword._id !== action.data.keyword.id\r\n      )\r\n      return Object.assign({}, state, {\r\n        places: state.places.map(place =>\r\n          place.id === placeToEdit.id ? placeToEdit : place\r\n        ),\r\n      })\r\n    case UPDATE_KEYWORD_FOR_PLACE:\r\n      places = state.places\r\n      for (let i = 0; i < places.length; i++) {\r\n        if (places[i].id === action.data.keyword.place._id) {\r\n          const place = places[i]\r\n          place.keywords.map(keyword =>\r\n            keyword._id === action.data.keyword.id\r\n              ? (keyword.title = action.data.keyword.title)\r\n              : null\r\n          )\r\n        }\r\n      }\r\n      return Object.assign({}, state, {\r\n        places: places,\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default PlaceReducer\r\n","const initialState = {\r\n  markers: [\r\n    {\r\n      title: 'testiMarker',\r\n    },\r\n  ],\r\n}\r\n\r\nconst MarkerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default MarkerReducer\r\n","import {\r\n  CREATE_KEYWORD,\r\n  DELETE_KEYWORD,\r\n  UPDATE_KEYWORD,\r\n  FETCH_KEYWORDS_BEGIN,\r\n  FETCH_KEYWORDS_SUCCESS,\r\n  FETCH_KEYWORDS_FAILURE,\r\n} from '../constants/KeywordConstants'\r\n\r\nconst initialState = {\r\n  keywords: [],\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nconst KeywordReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_KEYWORDS_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      }\r\n    case FETCH_KEYWORDS_SUCCESS:\r\n      const keywords = action.data.keywords.sort()\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        keywords: keywords,\r\n      }\r\n    case FETCH_KEYWORDS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.data.error,\r\n        keywords: [],\r\n      }\r\n    case CREATE_KEYWORD:\r\n      return Object.assign({}, state, {\r\n        keywords: state.keywords.concat(action.data),\r\n      })\r\n    case DELETE_KEYWORD:\r\n      return Object.assign({}, state, {\r\n        keywords: state.keywords.filter(\r\n          keyword => keyword.id !== action.data.id\r\n        ),\r\n      })\r\n    case UPDATE_KEYWORD:\r\n      return Object.assign({}, state, {\r\n        keywords: state.keywords.map(keyword =>\r\n          keyword.id !== action.data.keyword.id ? keyword : action.data.keyword\r\n        ),\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default KeywordReducer\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport placeReducer from '../reducers/PlaceReducer'\r\nimport markerReducer from '../reducers/MarkerReducer'\r\nimport keywordReducer from '../reducers/KeywordReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  placeReducer,\r\n  markerReducer,\r\n  keywordReducer,\r\n})\r\n\r\nconst RootStore = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default RootStore\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './stores/RootStore'\r\nimport './styles/styles.css'\r\nimport './styles/forms.css'\r\nimport './styles/aligned.css'\r\nimport './styles/responsive.css'\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}