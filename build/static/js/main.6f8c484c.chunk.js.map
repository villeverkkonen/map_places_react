{"version":3,"sources":["services/maps.js","components/InfoWindowEx.js","components/MapContainer.js","components/GoogleMap.js","services/places.js","actions/PlaceActions.js","constants/PlaceConstants.js","components/PlaceForm.js","services/keywords.js","actions/KeywordActions.js","constants/KeywordConstants.js","components/UpdateKeywordForm.js","components/Keyword.js","components/KeywordList.js","components/KeywordForm.js","components/UpdatePlaceForm.js","components/Place.js","components/PlaceList.js","App.js","reducers/PlaceReducer.js","reducers/MarkerReducer.js","reducers/KeywordReducer.js","stores/RootStore.js","index.js"],"names":["maps","axios","get","baseUrl","then","response","data","InfoWindowEx","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","infoWindowRef","React","createRef","onInfoWindowOpen","bind","assertThisInitialized","containerElement","document","createElement","inherits","createClass","key","value","ReactDOM","render","Children","only","children","current","infowindow","setContent","react_default","a","dist","assign","onOpen","ref","Component","ConnectedContainer","toggleInfoWindow","marker","e","title","state","activeMarker","showingInfoWindow","setState","selectedPlace","place_","_this2","className","google","zoom","initialCenter","lat","lng","places","map","place","id","position","latitude","longitude","onClick","components_InfoWindowEx","visible","description","openingHours","MapContainer","connect","placeReducer","markers","markerReducer","GoogleApiWrapper","apiKey","GoogleMap","mapService","components_MapContainer","services_places","getPlaces","getPlace","createPlace","post","deletePlace","delete","updatePlace","put","content","dispatch","placeService","catch","err","console","log","res","dispatchCreatePlace","dispatchUpdatePlace","fetchPlacesBegin","type","fetchPlacesSuccess","fetchPlacesFailure","error","dispatchDeletePlace","changeLabelColor","inputId","color","labels","getElementsByTagName","i","length","htmlFor","input","getElementById","label","style","changeInputColor","backgroundColor","ConnectedPlaceForm","handleChange","handleSubmit","toggleFormDisplay","hideForm","handleMouseOverLabel","handleMouseOutLabel","handleMouseOverInput","handleMouseOutInput","event","defineProperty","target","preventDefault","form","display","classList","add","remove","focus","onSubmit","autoComplete","onMouseOver","onMouseOut","onChange","PlaceForm","services_keywords","getKeywords","getKeyword","createKeyword","keyword","deleteKeyword","keywordId","placeId","updateKeyword","keywordService","dispatchCreateKeyword","dispatchUpdateKeyword","fetchKeywordsBegin","fetchKeywordsSuccess","keywords","fetchKeywordsFailure","dispatchDeleteKeyword","ConnectedUpdateKeywordForm","updateKeywordTitle","handleUpdate","dataset","hideUpdateKeyword","data-id","autoFocus","UpdateKeywordForm","ConnectedKeyword","toggleUpdateKeyword","showKeywordForm","showKeyword","handleDeleteKeyword","toggleShowKeyword","titleText","keywordDiv","components_UpdateKeywordForm","Keyword","ConnectedKeywordList","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","abrupt","t0","stop","_x","apply","arguments","_this$props","loading","message","_id","components_Keyword","KeywordList","keywordReducer","ConnectedKeywordForm","keywordTitle","KeywordForm","ConnectedUpdatePlaceForm","updateTitle","updateDescription","updateLatitude","updateLongitude","updateOpeningHours","hideUpdatePlace","UpdatePlaceForm","ConnectedPlace","toggleUpdatePlace","showUpdateForm","showPlace","handleDeletePlace","toggleShowPlace","placeDiv","components_KeywordList","components_KeywordForm","components_UpdatePlaceForm","Place","ConnectedPlaceList","components_Place","PlaceList","App","components_GoogleMap","components_PlaceForm","components_PlaceList","initialState","PlaceReducer","undefined","action","objectSpread","concat","filter","MarkerReducer","KeywordReducer","rootReducer","combineReducers","RootStore","createStore","applyMiddleware","thunk","es","store","src_App"],"mappings":"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","file":"static/js/main.6f8c484c.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/maps/'\r\n\r\nconst getApiKey = () => {\r\n    const request = axios.get(baseUrl + 'api_key')\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default {\r\n    getApiKey\r\n}","import React, { Component } from \"react\"\r\nimport ReactDOM from \"react-dom\";\r\nimport { InfoWindow } from \"google-maps-react\";\r\n\r\nexport class InfoWindowEx extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.infoWindowRef = React.createRef()\r\n        this.onInfoWindowOpen = this.onInfoWindowOpen.bind(this)\r\n        if (!this.containerElement) {\r\n            this.containerElement = document.createElement(`div`)\r\n        }\r\n    }\r\n\r\n    onInfoWindowOpen() {\r\n        ReactDOM.render(\r\n            React.Children.only(this.props.children),\r\n            this.containerElement\r\n        )\r\n        this.infoWindowRef.current.infowindow.setContent(this.containerElement)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <InfoWindow\r\n                onOpen={this.onInfoWindowOpen}\r\n                ref={this.infoWindowRef}\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoWindowEx","import React, { Component } from 'react'\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport { connect } from \"react-redux\"\r\nimport InfoWindowEx from './InfoWindowEx'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    places: state.placeReducer.places,\r\n    markers: state.markerReducer.markers\r\n  }\r\n}\r\n\r\nexport class ConnectedContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeMarker: {},\r\n      selectedPlace: {}\r\n    }\r\n\r\n    this.toggleInfoWindow = this.toggleInfoWindow.bind(this)\r\n  }\r\n\r\n  toggleInfoWindow = (props, marker, e) => {\r\n    if (marker.title === this.state.activeMarker.title && this.state.showingInfoWindow) {\r\n      this.setState({\r\n        activeMarker: {},\r\n        showingInfoWindow: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        selectedPlace: props.place_,\r\n        activeMarker: marker,\r\n        showingInfoWindow: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"map\">\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={5}\r\n          initialCenter={{\r\n            lat: 60.192059,\r\n            lng: 24.945831\r\n          }}\r\n        >\r\n          {this.props.places ?\r\n              this.props.places.map(place =>\r\n                  <Marker\r\n                      key={place.id}\r\n                      position={{lat: place.latitude, lng: place.longitude}}\r\n                      title={place.title}\r\n                      place_={place}\r\n                      onClick={this.toggleInfoWindow}\r\n                  />\r\n                )\r\n            : null}\r\n            <InfoWindowEx\r\n              marker={this.state.activeMarker}\r\n              visible={this.state.showingInfoWindow}\r\n            >\r\n              <div className=\"infoWindow\">\r\n                <h3>{this.state.selectedPlace.title}</h3>\r\n                <p>{this.state.selectedPlace.description}</p>\r\n                <p>Open: {this.state.selectedPlace.openingHours}</p>\r\n              </div>\r\n            </InfoWindowEx>\r\n        </Map>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst MapContainer = connect(mapStateToProps)(ConnectedContainer)\r\n\r\nexport default GoogleApiWrapper(props => ({\r\n  apiKey: props.apiKey\r\n}))(MapContainer)","import React, { Component } from 'react'\r\nimport mapService from '../services/maps'\r\nimport MapContainer from './MapContainer'\r\n\r\nexport class GoogleMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      apiKey: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    mapService\r\n      .getApiKey()\r\n      .then(apiKey => {\r\n        this.setState({ apiKey })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        this.state.apiKey ?\r\n            <MapContainer apiKey={this.state.apiKey} />\r\n        : null\r\n    )\r\n  }\r\n}\r\n\r\nexport default GoogleMap","import axios from 'axios'\r\nconst baseUrl = '/api/places/'\r\n\r\nconst getPlaces = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst getPlace = (id) => {\r\n    const request = axios.get(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst createPlace = (place) => {\r\n    const request = axios.post(baseUrl, place)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst deletePlace = (id) => {\r\n    const request = axios.delete(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst updatePlace = (place) => {\r\n    const request = axios.put(baseUrl + place.id, place)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default {\r\n    getPlaces,\r\n    getPlace,\r\n    createPlace,\r\n    deletePlace,\r\n    updatePlace\r\n}","import {\r\n    CREATE_PLACE,\r\n    DELETE_PLACE,\r\n    UPDATE_PLACE,\r\n    FETCH_PLACES_BEGIN,\r\n    FETCH_PLACES_SUCCESS,\r\n    FETCH_PLACES_FAILURE\r\n} from '../constants/PlaceConstants'\r\nimport placeService from '../services/places'\r\n\r\nexport function fetchPlaces() {\r\n    return async dispatch => {\r\n        dispatch(fetchPlacesBegin())\r\n        try {\r\n            const res = await placeService.getPlaces()\r\n            dispatch(fetchPlacesSuccess(res))\r\n            return res\r\n        }\r\n        catch (error) {\r\n            return dispatch(fetchPlacesFailure(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const createPlace = content => {\r\n\r\n    const place = {\r\n        title: content.title,\r\n        description: content.description,\r\n        latitude: content.latitude,\r\n        longitude: content.longitude,\r\n        openingHours: content.openingHours\r\n    }\r\n\r\n    return dispatch => {\r\n        placeService.createPlace(place)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchCreatePlace(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePlace = id => {\r\n    return dispatch => {\r\n        placeService.deletePlace(id)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchDeletePlace(id))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePlace = place => {\r\n    return dispatch => {\r\n        placeService.updatePlace(place)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchUpdatePlace(place))\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchPlacesBegin = () => ({\r\n    type: FETCH_PLACES_BEGIN\r\n})\r\n\r\nexport const fetchPlacesSuccess = places => ({\r\n    type: FETCH_PLACES_SUCCESS,\r\n    data: { places }\r\n})\r\n\r\nexport const fetchPlacesFailure = error => ({\r\n    type: FETCH_PLACES_FAILURE,\r\n    data: { error }\r\n})\r\n\r\nconst dispatchCreatePlace = place => {\r\n    return {\r\n        type: CREATE_PLACE,\r\n        data: {\r\n            title: place.title,\r\n            description: place.description,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude,\r\n            openingHours: place.openingHours,\r\n            id: place.id\r\n        }\r\n    }\r\n}\r\n\r\nconst dispatchDeletePlace = id => {\r\n    return {\r\n        type: DELETE_PLACE,\r\n        data: { id: id }\r\n    }\r\n}\r\n\r\nconst dispatchUpdatePlace = place => {\r\n    return {\r\n        type: UPDATE_PLACE,\r\n        data: { place: place }\r\n    }\r\n}","export const CREATE_PLACE = 'CREATE_PLACE'\r\nexport const DELETE_PLACE = 'DELETE_PLACE'\r\nexport const UPDATE_PLACE = 'UPDATE_PLACE'\r\nexport const FETCH_PLACES_BEGIN = 'FETCH_PLACES_BEGIN'\r\nexport const FETCH_PLACES_SUCCESS = 'FETCH_PLACES_SUCCESS'\r\nexport const FETCH_PLACES_FAILURE = 'FETCH_PLACES_FAILURE'","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { createPlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createPlace: place => dispatch(createPlace(place))\r\n    }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n    var labels = document.getElementsByTagName('LABEL')\r\n    for (var i = 0; i < labels.length; i++) {\r\n        if (labels[i].htmlFor === inputId) {\r\n            var input = document.getElementById(labels[i].htmlFor)\r\n            if (input)\r\n                input.label = labels[i]\r\n                input.label.style.color = color\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n    var input = document.getElementById(inputId)\r\n    input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedPlaceForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this)\r\n        this.hideForm = this.hideForm.bind(this)\r\n        this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n        this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n        this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n        this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const title = this.state.title\r\n        const description = this.state.description\r\n        const latitude = this.state.latitude\r\n        const longitude = this.state.longitude\r\n        const openingHours = this.state.openingHours\r\n\r\n        this.props.createPlace({\r\n            title,\r\n            description,\r\n            latitude,\r\n            longitude,\r\n            openingHours\r\n        })\r\n\r\n        this.setState({\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        })\r\n\r\n        this.hideForm()\r\n    }\r\n\r\n    toggleFormDisplay(event) {\r\n        event.preventDefault()\r\n\r\n        let form = document.getElementById(\"createPlaceForm\")\r\n\r\n        form.style.display === \"none\" ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        \r\n        form.style.display === \"none\" ? form.style.display = \"block\" : form.style.display = \"none\"\r\n        document.getElementById(\"title\").focus()\r\n    }\r\n\r\n    hideForm() {\r\n        let form = document.getElementById(\"createPlaceForm\")\r\n        form.style.display = \"none\"\r\n\r\n        let button = document.getElementById(\"addPlaceButton\")\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    handleMouseOverInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"gold\")\r\n        changeInputColor(event.target.id, \"gold\")\r\n    }\r\n\r\n    handleMouseOutInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"orange\")\r\n        changeInputColor(event.target.id, \"orange\")\r\n    }\r\n\r\n    handleMouseOverLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"gold\")\r\n        changeInputColor(event.target.htmlFor, \"gold\")\r\n    }\r\n\r\n    handleMouseOutLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"orange\")\r\n        changeInputColor(event.target.htmlFor, \"orange\")\r\n    }\r\n\r\n    render() {\r\n        const formStyle = {\r\n            display: \"none\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"placeForm\">\r\n                <button onClick={this.toggleFormDisplay} className=\"addPlaceButton\" id=\"addPlaceButton\">Add place</button>\r\n                <div className=\"createPlaceForm\" id=\"createPlaceForm\" style={formStyle}>\r\n                    <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"title\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Title</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"title\" value={this.state.title} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"description\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Description</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"description\" value={this.state.description} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"latitude\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Latitude</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"latitude\" value={this.state.latitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"longitude\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Longitude</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"longitude\" value={this.state.longitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"openingHours\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Opening hours</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"openingHours\" value={this.state.openingHours} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"createPlaceSaveButton\">Save place</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlaceForm = connect(null, mapDispatchToProps)(ConnectedPlaceForm)\r\n\r\nexport default PlaceForm","import axios from 'axios'\r\nconst baseUrl = '/api/keywords/'\r\n\r\nconst getKeywords = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst getKeyword = (id) => {\r\n    const request = axios.get(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst createKeyword = (keyword) => {\r\n    const request = axios.post(baseUrl, keyword)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst deleteKeyword = (keywordId, placeId) => {\r\n    const request = axios.delete(baseUrl + keywordId, placeId)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst updateKeyword = (keyword) => {\r\n    const request = axios.put(baseUrl + keyword.id, keyword)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default {\r\n    getKeywords,\r\n    getKeyword,\r\n    createKeyword,\r\n    deleteKeyword,\r\n    updateKeyword\r\n}","import {\r\n    CREATE_KEYWORD,\r\n    DELETE_KEYWORD,\r\n    UPDATE_KEYWORD,\r\n    FETCH_KEYWORDS_BEGIN,\r\n    FETCH_KEYWORDS_SUCCESS,\r\n    FETCH_KEYWORDS_FAILURE\r\n} from '../constants/KeywordConstants'\r\nimport keywordService from '../services/keywords'\r\n\r\nexport function fetchKeywords() {\r\n    return async dispatch => {\r\n        dispatch(fetchKeywordsBegin())\r\n        try {\r\n            const res = await keywordService.getKeywords()\r\n            dispatch(fetchKeywordsSuccess(res))\r\n            return res\r\n        }\r\n        catch (error) {\r\n            return dispatch(fetchKeywordsFailure(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const createKeyword = content => {\r\n\r\n    const keyword = {\r\n        title: content.title,\r\n        placeId: content.placeId\r\n    }\r\n\r\n    return dispatch => {\r\n        keywordService.createKeyword(keyword)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchCreateKeyword(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteKeyword = (keywordId, placeId) => {\r\n    return dispatch => {\r\n        keywordService.deleteKeyword(keywordId, placeId)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchDeleteKeyword(keywordId))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateKeyword = keyword => {\r\n    return dispatch => {\r\n        keywordService.updateKeyword(keyword)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchUpdateKeyword(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchKeywordsBegin = () => ({\r\n    type: FETCH_KEYWORDS_BEGIN\r\n})\r\n\r\nexport const fetchKeywordsSuccess = keywords => ({\r\n    type: FETCH_KEYWORDS_SUCCESS,\r\n    data: { keywords }\r\n})\r\n\r\nexport const fetchKeywordsFailure = error => ({\r\n    type: FETCH_KEYWORDS_FAILURE,\r\n    data: { error }\r\n})\r\n\r\nconst dispatchCreateKeyword = keyword => {\r\n    return {\r\n        type: CREATE_KEYWORD,\r\n        data: {\r\n            title: keyword.title,\r\n            id: keyword.id,\r\n            place: keyword.place\r\n        }\r\n    }\r\n}\r\n\r\nconst dispatchDeleteKeyword = id => {\r\n    return {\r\n        type: DELETE_KEYWORD,\r\n        data: { id: id }\r\n    }\r\n}\r\n\r\nconst dispatchUpdateKeyword = keyword => {\r\n    return {\r\n        type: UPDATE_KEYWORD,\r\n        data: { keyword: keyword }\r\n    }\r\n}","export const CREATE_KEYWORD = 'CREATE_KEYWORD'\r\nexport const DELETE_KEYWORD = 'DELETE_KEYWORD'\r\nexport const UPDATE_KEYWORD = 'UPDATE_KEYWORD'\r\nexport const FETCH_KEYWORDS_BEGIN = 'FETCH_KEYWORDS_BEGIN'\r\nexport const FETCH_KEYWORDS_SUCCESS = 'FETCH_KEYWORDS_SUCCESS'\r\nexport const FETCH_KEYWORDS_FAILURE = 'FETCH_KEYWORDS_FAILURE'","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { updateKeyword } from '../actions/KeywordActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateKeyword: keyword => dispatch(updateKeyword(keyword))\r\n    }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n    var labels = document.getElementsByTagName('LABEL')\r\n    for (var i = 0; i < labels.length; i++) {\r\n        if (labels[i].htmlFor === inputId) {\r\n            var input = document.getElementById(labels[i].htmlFor)\r\n            if (input)\r\n                input.label = labels[i]\r\n                input.label.style.color = color\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n    var input = document.getElementById(inputId)\r\n    input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedUpdateKeywordForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            updateKeywordTitle: \"\",\r\n            id: \"\",\r\n            placeId: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n        this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n        this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n        this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n        this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            updateKeywordTitle: this.props.keyword.title,\r\n            id: this.props.keyword.id,\r\n            placeId: this.props.place.id\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.dataset.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault()\r\n\r\n        this.props.updateKeyword({\r\n            title: this.state.updateKeywordTitle,\r\n            id: this.state.id\r\n            // placeId: this.state.placeId\r\n        })\r\n\r\n        this.setState({\r\n            updateKeywordTitle: \"\",\r\n        })\r\n\r\n        this.props.hideUpdateKeyword()\r\n    }\r\n\r\n    handleMouseOverInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"gold\")\r\n        changeInputColor(event.target.id, \"gold\")\r\n    }\r\n\r\n    handleMouseOutInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"orange\")\r\n        changeInputColor(event.target.id, \"orange\")\r\n    }\r\n\r\n    handleMouseOverLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"gold\")\r\n        changeInputColor(event.target.htmlFor, \"gold\")\r\n    }\r\n\r\n    handleMouseOutLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"orange\")\r\n        changeInputColor(event.target.htmlFor, \"orange\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"updateKeywordForm\" id=\"updateKeywordForm\">\r\n                <form onSubmit={this.handleUpdate} autoComplete=\"off\">\r\n                    <div className=\"updateKeywordFormRow\">\r\n                        <label htmlFor={\"updateKeywordTitle\" + this.state.id} className=\"updateKeywordLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Title</label>\r\n                        <input type=\"text\" className=\"updateKeywordInput\" id={\"updateKeywordTitle\" + this.state.id} data-id=\"updateKeywordTitle\" value={this.state.updateKeywordTitle} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} autoFocus />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"updateKeywordSaveButton\">Save keyword</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst UpdateKeywordForm = connect(null, mapDispatchToProps)(ConnectedUpdateKeywordForm)\r\n\r\nexport default UpdateKeywordForm","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteKeyword } from '../actions/KeywordActions'\r\nimport UpdateKeywordForm from './UpdateKeywordForm'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteKeyword: id => dispatch(deleteKeyword(id))\r\n    }\r\n}\r\n\r\nclass ConnectedKeyword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showKeyword: false,\r\n            showKeywordForm: false\r\n        }\r\n\r\n        this.handleDeleteKeyword = this.handleDeleteKeyword.bind(this)\r\n        this.toggleShowKeyword = this.toggleShowKeyword.bind(this)\r\n        this.toggleUpdateKeyword = this.toggleUpdateKeyword.bind(this)\r\n        this.hideUpdateKeyword = this.hideUpdateKeyword.bind(this)\r\n    }\r\n\r\n    handleDeleteKeyword() {\r\n        this.props.deleteKeyword(this.props.keyword.id, this.props.place.id)\r\n    }\r\n\r\n    toggleShowKeyword() {\r\n        const titleText = document.getElementById(\"keywordListTitle\" + this.props.keyword.id)\r\n        const keywordDiv = document.getElementById(\"keywordListObject\" + this.props.keyword.id)\r\n\r\n        if (this.state.showKeyword) {\r\n            titleText.style.color = \"orange\"\r\n            keywordDiv.classList.remove(\"linearGradient\")\r\n            this.hideUpdateKeyword()\r\n        } else {\r\n            titleText.style.color = \"gold\"\r\n            keywordDiv.classList.add(\"linearGradient\")\r\n        }\r\n\r\n        this.setState({ showKeyword: !this.state.showKeyword })\r\n    }\r\n\r\n    toggleUpdateKeyword = (event) => {\r\n        event.preventDefault()\r\n\r\n        !this.state.showKeywordForm ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        this.setState({ showKeywordForm: !this.state.showKeywordForm })\r\n    }\r\n\r\n    hideUpdateKeyword() {\r\n        this.setState({\r\n            showKeywordForm: false\r\n        })\r\n\r\n        let button = document.getElementById(\"updateKeywordButton\")\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div key={this.props.keyword.id} className=\"keywordListObject\" id={\"keywordListObject\" + this.props.keyword.id}>\r\n                <span onClick={this.toggleShowKeyword} className=\"keywordListTitle\" id={\"keywordListTitle\" + this.props.keyword.id}>{this.props.keyword.title}</span>\r\n                {this.state.showKeyword ?\r\n                    <div className=\"keywordInfo\">\r\n                        <div className=\"keywordButtons\">\r\n                            <button onClick={this.handleDeleteKeyword} className=\"deleteKeywordButton\">Delete keyword</button>\r\n                            <button onClick={this.toggleUpdateKeyword} className=\"updateKeywordButton\" id=\"updateKeywordButton\">Update keyword</button>\r\n                        </div>\r\n                        {this.state.showKeywordForm ?\r\n                            <UpdateKeywordForm\r\n                                keyword={this.props.keyword}\r\n                                place={this.props.place}\r\n                                hideUpdateKeyword={this.hideUpdateKeyword}\r\n                            />\r\n                        : null}\r\n                    </div>\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Keyword = connect(null, mapDispatchToProps)(ConnectedKeyword)\r\n\r\nexport default Keyword","import React from 'react'\r\nimport Keyword from './Keyword'\r\nimport { connect } from 'react-redux'\r\nimport { fetchKeywords } from '../actions/KeywordActions'\r\n\r\nconst mapStateToProps = state => ({\r\n    keywords: state.keywordReducer.keywords,\r\n    loading: state.keywordReducer.loading,\r\n    error: state.keywordReducer.error\r\n})\r\n\r\nclass ConnectedKeywordList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchKeywords())\r\n    }\r\n\r\n    render() {\r\n        const { error, loading, keywords } = this.props\r\n        if (error) {\r\n            return <div>Error! {error.message}</div>\r\n        }\r\n        if (loading && keywords.length > 0) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return(\r\n            <div className=\"keywordsList\">\r\n                <p className=\"keywordListTitle\">Keywords:</p>\r\n                {keywords ?\r\n                    keywords.map(keyword =>\r\n                        keyword.place && keyword.place._id === this.props.place.id ?\r\n                            <Keyword\r\n                                key={keyword.id}\r\n                                keyword={keyword}\r\n                                place={this.props.place}\r\n                            />\r\n                        : null\r\n                    )\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst KeywordList = connect(mapStateToProps)(ConnectedKeywordList)\r\n\r\nexport default KeywordList","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { createKeyword } from '../actions/KeywordActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createKeyword: keyword => dispatch(createKeyword(keyword))\r\n    }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n    var labels = document.getElementsByTagName('LABEL')\r\n    for (var i = 0; i < labels.length; i++) {\r\n        if (labels[i].htmlFor === inputId) {\r\n            var input = document.getElementById(labels[i].htmlFor)\r\n            if (input)\r\n                input.label = labels[i]\r\n                input.label.style.color = color\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n    var input = document.getElementById(inputId)\r\n    input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedKeywordForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            keywordTitle: \"\",\r\n            placeId: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this)\r\n        this.hideForm = this.hideForm.bind(this)\r\n        this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n        this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n        this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n        this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ placeId: this.props.place.id })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.dataset.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const keywordTitle = this.state.keywordTitle\r\n\r\n        this.props.createKeyword({\r\n            title: keywordTitle,\r\n            placeId: this.state.placeId\r\n        })\r\n\r\n        this.setState({\r\n            keywordTitle: \"\"\r\n        })\r\n\r\n        this.hideForm()\r\n    }\r\n\r\n    toggleFormDisplay(event) {\r\n        event.preventDefault()\r\n\r\n        let form = document.getElementById(\"createKeywordForm\" + this.state.placeId)\r\n\r\n        form.style.display === \"none\" ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        \r\n        form.style.display === \"none\" ? form.style.display = \"block\" : form.style.display = \"none\"\r\n        document.getElementById(\"keywordTitle\" + this.state.placeId).focus()\r\n    }\r\n\r\n    hideForm() {\r\n        let form = document.getElementById(\"createKeywordForm\" + this.state.placeId)\r\n        form.style.display = \"none\"\r\n\r\n        let button = document.getElementById(\"addKeywordButton\" + this.state.placeId)\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    handleMouseOverInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"gold\")\r\n        changeInputColor(event.target.id, \"gold\")\r\n    }\r\n\r\n    handleMouseOutInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"orange\")\r\n        changeInputColor(event.target.id, \"orange\")\r\n    }\r\n\r\n    handleMouseOverLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"gold\")\r\n        changeInputColor(event.target.htmlFor, \"gold\")\r\n    }\r\n\r\n    handleMouseOutLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"orange\")\r\n        changeInputColor(event.target.htmlFor, \"orange\")\r\n    }\r\n\r\n    render() {\r\n        const formStyle = {\r\n            display: \"none\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"keywordForm\">\r\n                <button onClick={this.toggleFormDisplay} className=\"addKeywordButton\" id={\"addKeywordButton\" + this.state.placeId}>Add keyword</button>\r\n                <div className=\"createKeywordForm\" id={\"createKeywordForm\" + this.state.placeId} style={formStyle}>\r\n                    <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                        <div className=\"createKeywordFormRow\">\r\n                            <label htmlFor={\"keywordTitle\" + this.state.placeId} className=\"createKeywordLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Title</label>\r\n                            <input type=\"text\" className=\"createKeywordInput\" id={\"keywordTitle\" + this.state.placeId} value={this.state.keywordTitle} data-id=\"keywordTitle\" onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"createKeywordSaveButton\">Save keyword</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst KeywordForm = connect(null, mapDispatchToProps)(ConnectedKeywordForm)\r\n\r\nexport default KeywordForm","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { updatePlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updatePlace: place => dispatch(updatePlace(place))\r\n    }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n    var labels = document.getElementsByTagName('LABEL')\r\n    for (var i = 0; i < labels.length; i++) {\r\n        if (labels[i].htmlFor === inputId) {\r\n            var input = document.getElementById(labels[i].htmlFor)\r\n            if (input)\r\n                input.label = labels[i]\r\n                input.label.style.color = color\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n    var input = document.getElementById(inputId)\r\n    input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedUpdatePlaceForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            updateTitle: \"\",\r\n            updateDescription: \"\",\r\n            updateLatitude: \"\",\r\n            updateLongitude: \"\",\r\n            updateOpeningHours: \"\",\r\n            id: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n        this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n        this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n        this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n        this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            updateTitle: this.props.place.title,\r\n            updateDescription: this.props.place.description,\r\n            updateLatitude: this.props.place.latitude,\r\n            updateLongitude: this.props.place.longitude,\r\n            updateOpeningHours: this.props.place.openingHours,\r\n            id: this.props.place.id\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.dataset.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault()\r\n\r\n        this.props.updatePlace({\r\n            title: this.state.updateTitle,\r\n            description: this.state.updateDescription,\r\n            latitude: this.state.updateLatitude,\r\n            longitude: this.state.updateLongitude,\r\n            openingHours: this.state.updateOpeningHours,\r\n            id: this.state.id\r\n        })\r\n\r\n        this.setState({\r\n            updateTitle: \"\",\r\n            updateDescription: \"\",\r\n            updateLatitude: \"\",\r\n            updateLongitude: \"\",\r\n            updateOpeningHours: \"\"\r\n        })\r\n\r\n        this.props.hideUpdatePlace()\r\n    }\r\n\r\n    handleMouseOverInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"gold\")\r\n        changeInputColor(event.target.id, \"gold\")\r\n    }\r\n\r\n    handleMouseOutInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"orange\")\r\n        changeInputColor(event.target.id, \"orange\")\r\n    }\r\n\r\n    handleMouseOverLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"gold\")\r\n        changeInputColor(event.target.htmlFor, \"gold\")\r\n    }\r\n\r\n    handleMouseOutLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"orange\")\r\n        changeInputColor(event.target.htmlFor, \"orange\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"updatePlaceForm\" id=\"updatePlaceForm\">\r\n                <form onSubmit={this.handleUpdate} autoComplete=\"off\">\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateTitle\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Title</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateTitle\" + this.state.id} data-id=\"updateTitle\" value={this.state.updateTitle} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} autoFocus />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateDescription\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Description</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateDescription\" + this.state.id} data-id=\"updateDescription\" value={this.state.updateDescription} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateLatitude\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Latitude</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateLatitude\" + this.state.id} data-id=\"updateLatitude\" value={this.state.updateLatitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateLongitude\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Longitude</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateLongitude\" + this.state.id} data-id=\"updateLongitude\" value={this.state.updateLongitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateOpeningHours\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Opening hours</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateOpeningHours\" + this.state.id} data-id=\"updateOpeningHours\" value={this.state.updateOpeningHours} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"updatePlaceSaveButton\">Save place</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst UpdatePlaceForm = connect(null, mapDispatchToProps)(ConnectedUpdatePlaceForm)\r\n\r\nexport default UpdatePlaceForm","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deletePlace } from '../actions/PlaceActions'\r\nimport KeywordList from './KeywordList'\r\nimport KeywordForm from './KeywordForm'\r\nimport UpdatePlaceForm from './UpdatePlaceForm'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deletePlace: id => dispatch(deletePlace(id))\r\n    }\r\n}\r\n\r\nclass ConnectedPlace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showPlace: false,\r\n            showUpdateForm: false\r\n        }\r\n\r\n        this.handleDeletePlace = this.handleDeletePlace.bind(this)\r\n        this.toggleShowPlace = this.toggleShowPlace.bind(this)\r\n        this.toggleUpdatePlace = this.toggleUpdatePlace.bind(this)\r\n        this.hideUpdatePlace = this.hideUpdatePlace.bind(this)\r\n    }\r\n\r\n    handleDeletePlace() {\r\n        this.props.deletePlace(this.props.place.id)\r\n    }\r\n\r\n    toggleShowPlace() {\r\n        const titleText = document.getElementById(\"placeListTitle\" + this.props.place.id)\r\n        const placeDiv = document.getElementById(\"placeListObject\" + this.props.place.id)\r\n\r\n        if (this.state.showPlace) {\r\n            titleText.style.color = \"orange\"\r\n            placeDiv.classList.remove(\"linearGradient\")\r\n            this.hideUpdatePlace()\r\n        } else {\r\n            titleText.style.color = \"gold\"\r\n            placeDiv.classList.add(\"linearGradient\")\r\n        }\r\n\r\n        this.setState({ showPlace: !this.state.showPlace })\r\n    }\r\n\r\n    toggleUpdatePlace = (event) => {\r\n        event.preventDefault()\r\n\r\n        !this.state.showUpdateForm ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        this.setState({ showUpdateForm: !this.state.showUpdateForm })\r\n    }\r\n\r\n    hideUpdatePlace() {\r\n        this.setState({\r\n            showUpdateForm: false\r\n        })\r\n\r\n        let button = document.getElementById(\"updatePlaceButton\")\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div key={this.props.place.id} className=\"placeListObject\" id={\"placeListObject\" + this.props.place.id}>\r\n                <span onClick={this.toggleShowPlace} className=\"placeListTitle\" id={\"placeListTitle\" + this.props.place.id}>{this.props.place.title}</span>\r\n                {this.state.showPlace ?\r\n                    <div className=\"placeInfo\">\r\n                        <span>{this.props.place.description}</span><br/>\r\n                        <span>Open: {this.props.place.openingHours}</span><br/>\r\n                        <KeywordList place={this.props.place} />\r\n                        <KeywordForm place={this.props.place} />\r\n                        <div className=\"placeButtons\">\r\n                            <button onClick={this.handleDeletePlace} className=\"deletePlaceButton\">Delete place</button>\r\n                            <button onClick={this.toggleUpdatePlace} className=\"updatePlaceButton\" id=\"updatePlaceButton\">Update place</button>\r\n                        </div>\r\n                        {this.state.showUpdateForm ?\r\n                            <UpdatePlaceForm\r\n                                place={this.props.place}\r\n                                hideUpdatePlace={this.hideUpdatePlace}\r\n                            />\r\n                        : null}\r\n                    </div>\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Place = connect(null, mapDispatchToProps)(ConnectedPlace)\r\n\r\nexport default Place","import React from 'react'\r\nimport Place from './Place'\r\nimport { connect } from 'react-redux'\r\nimport { fetchPlaces } from '../actions/PlaceActions'\r\n\r\nconst mapStateToProps = state => ({\r\n    places: state.placeReducer.places,\r\n    loading: state.placeReducer.loading,\r\n    error: state.placeReducer.error\r\n})\r\n\r\nclass ConnectedPlaceList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchPlaces())\r\n    }\r\n\r\n    render() {\r\n        const { error, loading, places } = this.props\r\n        if (error) {\r\n            return <div>Error! {error.message}</div>\r\n        }\r\n        if (loading && places.length > 0) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return(\r\n            <div className=\"placesList\">\r\n                {places ?\r\n                    places.map(place =>\r\n                        <Place\r\n                            key={place.id}\r\n                            place={place}\r\n                        />\r\n                    )\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlaceList = connect(mapStateToProps)(ConnectedPlaceList)\r\n\r\nexport default PlaceList","import React from 'react'\r\nimport GoogleMap from './components/GoogleMap'\r\nimport PlaceForm from './components/PlaceForm'\r\nimport PlaceList from './components/PlaceList'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <GoogleMap />\r\n      <div id=\"alignedDivs\">\r\n        <div id=\"leftDiv\">\r\n          <PlaceForm />\r\n        </div>\r\n\r\n        <div id=\"rightDiv\">\r\n          <PlaceList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import {\r\n  CREATE_PLACE,\r\n  DELETE_PLACE,\r\n  UPDATE_PLACE,\r\n  FETCH_PLACES_BEGIN,\r\n  FETCH_PLACES_SUCCESS,\r\n  FETCH_PLACES_FAILURE\r\n} from '../constants/PlaceConstants'\r\n\r\nconst initialState = {\r\n    places: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst PlaceReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_PLACES_BEGIN:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          error: null\r\n        }\r\n      case FETCH_PLACES_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          places: action.data.places\r\n        }\r\n      case FETCH_PLACES_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.data.error,\r\n          places: []\r\n        }\r\n      case CREATE_PLACE:\r\n        return Object.assign({}, state, {\r\n          places: state.places.concat(action.data)\r\n        })\r\n      case DELETE_PLACE:\r\n        return Object.assign({}, state, {\r\n          places: state.places.filter(place => place.id !== action.data.id)\r\n        })\r\n      case UPDATE_PLACE:\r\n        return Object.assign({}, state, {\r\n          places: state.places.map(place => place.id !== action.data.place.id ? place : action.data.place)\r\n        })\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default PlaceReducer","\r\nconst initialState = {\r\n    markers: [\r\n        {\r\n            title: \"testiMarker\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst MarkerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default MarkerReducer","import {\r\n    CREATE_KEYWORD,\r\n    DELETE_KEYWORD,\r\n    UPDATE_KEYWORD,\r\n    FETCH_KEYWORDS_BEGIN,\r\n    FETCH_KEYWORDS_SUCCESS,\r\n    FETCH_KEYWORDS_FAILURE\r\n  } from '../constants/KeywordConstants'\r\n  \r\n  const initialState = {\r\n      keywords: [],\r\n      loading: false,\r\n      error: null\r\n  }\r\n  \r\n  const KeywordReducer = (state = initialState, action) => {\r\n      switch (action.type) {\r\n        case FETCH_KEYWORDS_BEGIN:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            error: null\r\n          }\r\n        case FETCH_KEYWORDS_SUCCESS:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            keywords: action.data.keywords\r\n          }\r\n        case FETCH_KEYWORDS_FAILURE:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.data.error,\r\n            keywords: []\r\n          }\r\n        case CREATE_KEYWORD:\r\n          return Object.assign({}, state, {\r\n            keywords: state.keywords.concat(action.data)\r\n          })\r\n        case DELETE_KEYWORD:\r\n          return Object.assign({}, state, {\r\n            keywords: state.keywords.filter(keyword => keyword.id !== action.data.id)\r\n          })\r\n        case UPDATE_KEYWORD:\r\n          return Object.assign({}, state, {\r\n            keywords: state.keywords.map(keyword => keyword.id !== action.data.keyword.id ? keyword : action.data.keyword)\r\n          })\r\n        default:\r\n          return state\r\n      }\r\n  }\r\n  \r\n  export default KeywordReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport placeReducer from '../reducers/PlaceReducer'\r\nimport markerReducer from '../reducers/MarkerReducer'\r\nimport keywordReducer from '../reducers/KeywordReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    placeReducer,\r\n    markerReducer,\r\n    keywordReducer\r\n})\r\n\r\nconst RootStore = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default RootStore","import React from 'react'\r\nimport { render } from \"react-dom\"\r\nimport App from './App'\r\nimport { Provider } from \"react-redux\"\r\nimport store from './stores/RootStore'\r\nimport './styles/styles.css'\r\nimport './styles/forms.css'\r\nimport './styles/aligned.css'\r\nimport './styles/responsive.css'\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}