{"version":3,"sources":["services/maps.js","components/InfoWindowEx.js","components/MapContainer.js","components/GoogleMap.js","services/places.js","actions/PlaceActions.js","constants/PlaceConstants.js","components/PlaceForm.js","services/keywords.js","actions/KeywordActions.js","constants/KeywordConstants.js","components/UpdateKeywordForm.js","components/Keyword.js","components/KeywordList.js","components/KeywordForm.js","components/UpdatePlaceForm.js","components/Place.js","components/PlaceList.js","components/KeywordSearch.js","App.js","reducers/PlaceReducer.js","reducers/MarkerReducer.js","reducers/KeywordReducer.js","stores/RootStore.js","index.js"],"names":["maps","axios","get","baseUrl","then","response","data","InfoWindowEx","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","infoWindowRef","React","createRef","onInfoWindowOpen","bind","assertThisInitialized","containerElement","document","createElement","inherits","createClass","key","value","ReactDOM","render","Children","only","children","current","infowindow","setContent","react_default","a","dist","assign","onOpen","ref","Component","ConnectedContainer","toggleInfoWindow","marker","e","title","state","activeMarker","showingInfoWindow","setState","selectedPlace","place_","_this2","className","google","zoom","initialCenter","lat","lng","placesByQuery","length","keywordSearchQuery","map","place","id","position","latitude","longitude","onClick","places","components_InfoWindowEx","visible","description","openingHours","MapContainer","connect","placeReducer","markers","markerReducer","GoogleApiWrapper","apiKey","GoogleMap","mapService","components_MapContainer","services_places","getPlaces","getPlace","createPlace","post","deletePlace","delete","updatePlace","put","fetchPlaces","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","wrap","_context","prev","next","fetchPlacesBegin","placeService","sent","fetchPlacesSuccess","abrupt","t0","fetchPlacesFailure","stop","_x","apply","arguments","content","catch","err","console","log","dispatchCreatePlace","dispatchUpdatePlace","type","error","dispatchDeletePlace","changeLabelColor","inputId","color","labels","getElementsByTagName","i","htmlFor","input","getElementById","label","style","changeInputColor","backgroundColor","ConnectedPlaceForm","handleChange","handleSubmit","toggleFormDisplay","hideForm","handleMouseOverLabel","handleMouseOutLabel","handleMouseOverInput","handleMouseOutInput","event","defineProperty","target","preventDefault","form","display","classList","add","remove","focus","onSubmit","autoComplete","onMouseOver","onMouseOut","onChange","PlaceForm","services_keywords","getKeywords","getKeyword","createKeyword","keyword","deleteKeyword","updateKeyword","placeId","keywordService","dispatchCreateKeyword","dispatchUpdateKeyword","fetchKeywordsBegin","fetchKeywordsSuccess","keywords","fetchKeywordsFailure","dispatchDeleteKeyword","ConnectedUpdateKeywordForm","updateKeywordTitle","handleUpdate","dataset","hideUpdateKeyword","data-id","autoFocus","UpdateKeywordForm","ConnectedKeyword","toggleUpdateKeyword","showKeywordForm","showKeyword","handleDeleteKeyword","toggleShowKeyword","titleText","keywordDiv","components_UpdateKeywordForm","Keyword","deleteKeywordFromPlace","ConnectedKeywordList","_this$props","loading","message","_id","components_Keyword","KeywordList","keywordReducer","ConnectedKeywordForm","keywordTitle","KeywordForm","ConnectedUpdatePlaceForm","updateTitle","updateDescription","updateLatitude","updateLongitude","updateOpeningHours","hideUpdatePlace","UpdatePlaceForm","ConnectedPlace","toggleUpdatePlace","showUpdateForm","showPlace","handleDeletePlace","toggleShowPlace","placeDiv","components_KeywordList","components_KeywordForm","components_UpdatePlaceForm","Place","ConnectedPlaceList","components_Place","PlaceList","ConnectedKeywordSearch","index","toLowerCase","includes","concat","getPlacesByQuery","KeywordSearch","App","components_GoogleMap","components_PlaceForm","components_PlaceList","components_KeywordSearch","initialState","PlaceReducer","undefined","action","objectSpread","filter","placeToEdit","MarkerReducer","KeywordReducer","rootReducer","combineReducers","RootStore","createStore","applyMiddleware","thunk","es","store","src_App"],"mappings":"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","file":"static/js/main.04b61a62.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/maps/'\r\n\r\nconst getApiKey = () => {\r\n    const request = axios.get(baseUrl + 'api_key')\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default {\r\n    getApiKey\r\n}","import React, { Component } from \"react\"\r\nimport ReactDOM from \"react-dom\";\r\nimport { InfoWindow } from \"google-maps-react\";\r\n\r\nexport class InfoWindowEx extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.infoWindowRef = React.createRef()\r\n        this.onInfoWindowOpen = this.onInfoWindowOpen.bind(this)\r\n        if (!this.containerElement) {\r\n            this.containerElement = document.createElement(`div`)\r\n        }\r\n    }\r\n\r\n    onInfoWindowOpen() {\r\n        ReactDOM.render(\r\n            React.Children.only(this.props.children),\r\n            this.containerElement\r\n        )\r\n        this.infoWindowRef.current.infowindow.setContent(this.containerElement)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <InfoWindow\r\n                onOpen={this.onInfoWindowOpen}\r\n                ref={this.infoWindowRef}\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoWindowEx","import React, { Component } from 'react'\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport { connect } from \"react-redux\"\r\nimport InfoWindowEx from './InfoWindowEx'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    places: state.placeReducer.places,\r\n    placesByQuery: state.placeReducer.placesByQuery,\r\n    keywordSearchQuery: state.placeReducer.keywordSearchQuery,\r\n    markers: state.markerReducer.markers\r\n  }\r\n}\r\n\r\nexport class ConnectedContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeMarker: {},\r\n      selectedPlace: {}\r\n    }\r\n\r\n    this.toggleInfoWindow = this.toggleInfoWindow.bind(this)\r\n  }\r\n\r\n  toggleInfoWindow = (props, marker, e) => {\r\n    if (marker.title === this.state.activeMarker.title && this.state.showingInfoWindow) {\r\n      this.setState({\r\n        activeMarker: {},\r\n        showingInfoWindow: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        selectedPlace: props.place_,\r\n        activeMarker: marker,\r\n        showingInfoWindow: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"map\">\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={5}\r\n          initialCenter={{\r\n            lat: 60.192059,\r\n            lng: 24.945831\r\n          }}\r\n        >\r\n          {this.props.placesByQuery.length > 0 || this.props.keywordSearchQuery.length ?\r\n            this.props.placesByQuery.map(place =>\r\n              <Marker\r\n                key={place.id}\r\n                position={{lat: place.latitude, lng: place.longitude}}\r\n                title={place.title}\r\n                place_={place}\r\n                onClick={this.toggleInfoWindow}\r\n              />\r\n            )\r\n          :\r\n            this.props.places.map(place =>\r\n              <Marker\r\n                key={place.id}\r\n                position={{lat: place.latitude, lng: place.longitude}}\r\n                title={place.title}\r\n                place_={place}\r\n                onClick={this.toggleInfoWindow}\r\n              />\r\n            )\r\n          }\r\n          <InfoWindowEx\r\n            marker={this.state.activeMarker}\r\n            visible={this.state.showingInfoWindow}\r\n          >\r\n            <div className=\"infoWindow\">\r\n              <h3>{this.state.selectedPlace.title}</h3>\r\n              <p>{this.state.selectedPlace.description}</p>\r\n              <p>Open: {this.state.selectedPlace.openingHours}</p>\r\n            </div>\r\n          </InfoWindowEx>\r\n        </Map>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst MapContainer = connect(mapStateToProps)(ConnectedContainer)\r\n\r\nexport default GoogleApiWrapper(props => ({\r\n  apiKey: props.apiKey\r\n}))(MapContainer)","import React, { Component } from 'react'\r\nimport mapService from '../services/maps'\r\nimport MapContainer from './MapContainer'\r\n\r\nexport class GoogleMap extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      apiKey: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    mapService\r\n      .getApiKey()\r\n      .then(apiKey => {\r\n        this.setState({ apiKey })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        this.state.apiKey ?\r\n            <MapContainer apiKey={this.state.apiKey} />\r\n        : null\r\n    )\r\n  }\r\n}\r\n\r\nexport default GoogleMap","import axios from 'axios'\r\nconst baseUrl = '/api/places/'\r\n\r\nconst getPlaces = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst getPlace = (id) => {\r\n    const request = axios.get(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst createPlace = (place) => {\r\n    const request = axios.post(baseUrl, place)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst deletePlace = (id) => {\r\n    const request = axios.delete(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst updatePlace = (place) => {\r\n    const request = axios.put(baseUrl + place.id, place)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default {\r\n    getPlaces,\r\n    getPlace,\r\n    createPlace,\r\n    deletePlace,\r\n    updatePlace\r\n}","import {\r\n    CREATE_PLACE,\r\n    DELETE_PLACE,\r\n    UPDATE_PLACE,\r\n    FETCH_PLACES_BEGIN,\r\n    FETCH_PLACES_SUCCESS,\r\n    FETCH_PLACES_FAILURE,\r\n    PLACES_BY_QUERY,\r\n    ADD_KEYWORD_TO_PLACE,\r\n    DELETE_KEYWORD_FROM_PLACE,\r\n    UPDATE_KEYWORD_FOR_PLACE\r\n} from '../constants/PlaceConstants'\r\nimport placeService from '../services/places'\r\n\r\nexport function fetchPlaces() {\r\n    return async dispatch => {\r\n        dispatch(fetchPlacesBegin())\r\n        try {\r\n            const res = await placeService.getPlaces()\r\n            dispatch(fetchPlacesSuccess(res))\r\n            return res\r\n        }\r\n        catch (error) {\r\n            return dispatch(fetchPlacesFailure(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const addKeywordToPlace = keyword => ({\r\n    type: ADD_KEYWORD_TO_PLACE,\r\n    data: { keyword }\r\n})\r\n\r\nexport const deleteKeywordFromPlace = content => ({\r\n    type: DELETE_KEYWORD_FROM_PLACE,\r\n    data: {\r\n        keyword: content.keyword,\r\n        place: content.place\r\n    }\r\n})\r\n\r\nexport const updateKeywordForPlace = keyword => ({\r\n    type: UPDATE_KEYWORD_FOR_PLACE,\r\n    data: { keyword }\r\n})\r\n\r\nexport const getPlacesByQuery = (placesByQuery, keywordSearchQuery) => ({\r\n    type: PLACES_BY_QUERY,\r\n    data: {\r\n        placesByQuery,\r\n        keywordSearchQuery\r\n    }\r\n})\r\n\r\nexport const createPlace = content => {\r\n\r\n    const place = {\r\n        title: content.title,\r\n        description: content.description,\r\n        latitude: content.latitude,\r\n        longitude: content.longitude,\r\n        openingHours: content.openingHours\r\n    }\r\n\r\n    return dispatch => {\r\n        placeService.createPlace(place)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchCreatePlace(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePlace = id => {\r\n    return dispatch => {\r\n        placeService.deletePlace(id)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchDeletePlace(id))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePlace = place => {\r\n    return dispatch => {\r\n        placeService.updatePlace(place)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchUpdatePlace(place))\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchPlacesBegin = () => ({\r\n    type: FETCH_PLACES_BEGIN\r\n})\r\n\r\nexport const fetchPlacesSuccess = places => ({\r\n    type: FETCH_PLACES_SUCCESS,\r\n    data: { places }\r\n})\r\n\r\nexport const fetchPlacesFailure = error => ({\r\n    type: FETCH_PLACES_FAILURE,\r\n    data: { error }\r\n})\r\n\r\nconst dispatchCreatePlace = place => {\r\n    return {\r\n        type: CREATE_PLACE,\r\n        data: {\r\n            id: place.id,\r\n            title: place.title,\r\n            description: place.description,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude,\r\n            openingHours: place.openingHours\r\n        }\r\n    }\r\n}\r\n\r\nconst dispatchDeletePlace = id => {\r\n    return {\r\n        type: DELETE_PLACE,\r\n        data: { id: id }\r\n    }\r\n}\r\n\r\nconst dispatchUpdatePlace = place => {\r\n    return {\r\n        type: UPDATE_PLACE,\r\n        data: { place: place }\r\n    }\r\n}","export const CREATE_PLACE = 'CREATE_PLACE'\r\nexport const DELETE_PLACE = 'DELETE_PLACE'\r\nexport const UPDATE_PLACE = 'UPDATE_PLACE'\r\nexport const FETCH_PLACES_BEGIN = 'FETCH_PLACES_BEGIN'\r\nexport const FETCH_PLACES_SUCCESS = 'FETCH_PLACES_SUCCESS'\r\nexport const FETCH_PLACES_FAILURE = 'FETCH_PLACES_FAILURE'\r\nexport const PLACES_BY_QUERY = 'PLACES_BY_QUERY'\r\nexport const ADD_KEYWORD_TO_PLACE = 'ADD_KEYWORD_TO_PLACE'\r\nexport const DELETE_KEYWORD_FROM_PLACE = 'DELETE_KEYWORD_FROM_PLACE'\r\nexport const UPDATE_KEYWORD_FOR_PLACE = 'UPDATE_KEYWORD_FOR_PLACE'","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { createPlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createPlace: place => dispatch(createPlace(place))\r\n    }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n    var labels = document.getElementsByTagName('LABEL')\r\n    for (var i = 0; i < labels.length; i++) {\r\n        if (labels[i].htmlFor === inputId) {\r\n            var input = document.getElementById(labels[i].htmlFor)\r\n            if (input)\r\n                input.label = labels[i]\r\n                input.label.style.color = color\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n    var input = document.getElementById(inputId)\r\n    input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedPlaceForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this)\r\n        this.hideForm = this.hideForm.bind(this)\r\n        this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n        this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n        this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n        this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const title = this.state.title\r\n        const description = this.state.description\r\n        const latitude = this.state.latitude\r\n        const longitude = this.state.longitude\r\n        const openingHours = this.state.openingHours\r\n\r\n        this.props.createPlace({\r\n            title,\r\n            description,\r\n            latitude,\r\n            longitude,\r\n            openingHours\r\n        })\r\n\r\n        this.setState({\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        })\r\n\r\n        this.hideForm()\r\n    }\r\n\r\n    toggleFormDisplay(event) {\r\n        event.preventDefault()\r\n\r\n        let form = document.getElementById(\"createPlaceForm\")\r\n\r\n        form.style.display === \"none\" ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        \r\n        form.style.display === \"none\" ? form.style.display = \"block\" : form.style.display = \"none\"\r\n        document.getElementById(\"title\").focus()\r\n    }\r\n\r\n    hideForm() {\r\n        let form = document.getElementById(\"createPlaceForm\")\r\n        form.style.display = \"none\"\r\n\r\n        let button = document.getElementById(\"addPlaceButton\")\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    handleMouseOverInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"gold\")\r\n        changeInputColor(event.target.id, \"gold\")\r\n    }\r\n\r\n    handleMouseOutInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"orange\")\r\n        changeInputColor(event.target.id, \"orange\")\r\n    }\r\n\r\n    handleMouseOverLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"gold\")\r\n        changeInputColor(event.target.htmlFor, \"gold\")\r\n    }\r\n\r\n    handleMouseOutLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"orange\")\r\n        changeInputColor(event.target.htmlFor, \"orange\")\r\n    }\r\n\r\n    render() {\r\n        const formStyle = {\r\n            display: \"none\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"placeForm\">\r\n                <button onClick={this.toggleFormDisplay} className=\"addPlaceButton\" id=\"addPlaceButton\">Add place</button>\r\n                <div className=\"createPlaceForm\" id=\"createPlaceForm\" style={formStyle}>\r\n                    <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"title\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Title</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"title\" value={this.state.title} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"description\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Description</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"description\" value={this.state.description} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"latitude\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Latitude</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"latitude\" value={this.state.latitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"longitude\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Longitude</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"longitude\" value={this.state.longitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"openingHours\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Opening hours</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"openingHours\" value={this.state.openingHours} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"createPlaceSaveButton\">Save place</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlaceForm = connect(null, mapDispatchToProps)(ConnectedPlaceForm)\r\n\r\nexport default PlaceForm","import axios from 'axios'\r\nconst baseUrl = '/api/keywords/'\r\n\r\nconst getKeywords = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst getKeyword = id => {\r\n    const request = axios.get(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst createKeyword = keyword => {\r\n    const request = axios.post(baseUrl, keyword)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst deleteKeyword = content => {\r\n    const request = axios.delete(baseUrl + content.keyword.id + \"/\" + content.place.id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst updateKeyword = keyword => {\r\n    const request = axios.put(baseUrl + keyword.id, keyword)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default {\r\n    getKeywords,\r\n    getKeyword,\r\n    createKeyword,\r\n    deleteKeyword,\r\n    updateKeyword\r\n}","import {\r\n    CREATE_KEYWORD,\r\n    DELETE_KEYWORD,\r\n    UPDATE_KEYWORD,\r\n    FETCH_KEYWORDS_BEGIN,\r\n    FETCH_KEYWORDS_SUCCESS,\r\n    FETCH_KEYWORDS_FAILURE\r\n} from '../constants/KeywordConstants'\r\nimport keywordService from '../services/keywords'\r\nimport { addKeywordToPlace, deleteKeywordFromPlace, updateKeywordForPlace } from './PlaceActions'\r\n\r\nexport function fetchKeywords() {\r\n    return async dispatch => {\r\n        dispatch(fetchKeywordsBegin())\r\n        try {\r\n            const res = await keywordService.getKeywords()\r\n            dispatch(fetchKeywordsSuccess(res))\r\n            return res\r\n        }\r\n        catch (error) {\r\n            return dispatch(fetchKeywordsFailure(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const createKeyword = content => {\r\n\r\n    const keyword = {\r\n        title: content.title,\r\n        placeId: content.placeId\r\n    }\r\n\r\n    return dispatch => {\r\n        keywordService.createKeyword(keyword)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchCreateKeyword(res))\r\n            dispatch(addKeywordToPlace(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteKeyword = content => {\r\n    return dispatch => {\r\n        keywordService.deleteKeyword(content)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchDeleteKeyword(content))\r\n            dispatch(deleteKeywordFromPlace(content))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateKeyword = keyword => {\r\n    return dispatch => {\r\n        keywordService.updateKeyword(keyword)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchUpdateKeyword(res))\r\n            dispatch(updateKeywordForPlace(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchKeywordsBegin = () => ({\r\n    type: FETCH_KEYWORDS_BEGIN\r\n})\r\n\r\nexport const fetchKeywordsSuccess = keywords => ({\r\n    type: FETCH_KEYWORDS_SUCCESS,\r\n    data: { keywords }\r\n})\r\n\r\nexport const fetchKeywordsFailure = error => ({\r\n    type: FETCH_KEYWORDS_FAILURE,\r\n    data: { error }\r\n})\r\n\r\nconst dispatchCreateKeyword = keyword => {\r\n    return {\r\n        type: CREATE_KEYWORD,\r\n        data: {\r\n            title: keyword.title,\r\n            id: keyword.id,\r\n            place: keyword.place\r\n        }\r\n    }\r\n}\r\n\r\nconst dispatchDeleteKeyword = content => {\r\n    return {\r\n        type: DELETE_KEYWORD,\r\n        data: { id: content.keyword.id }\r\n    }\r\n}\r\n\r\nconst dispatchUpdateKeyword = keyword => {\r\n    return {\r\n        type: UPDATE_KEYWORD,\r\n        data: { keyword: keyword }\r\n    }\r\n}","export const CREATE_KEYWORD = 'CREATE_KEYWORD'\r\nexport const DELETE_KEYWORD = 'DELETE_KEYWORD'\r\nexport const UPDATE_KEYWORD = 'UPDATE_KEYWORD'\r\nexport const FETCH_KEYWORDS_BEGIN = 'FETCH_KEYWORDS_BEGIN'\r\nexport const FETCH_KEYWORDS_SUCCESS = 'FETCH_KEYWORDS_SUCCESS'\r\nexport const FETCH_KEYWORDS_FAILURE = 'FETCH_KEYWORDS_FAILURE'","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { updateKeyword } from '../actions/KeywordActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateKeyword: keyword => dispatch(updateKeyword(keyword))\r\n    }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n    var labels = document.getElementsByTagName('LABEL')\r\n    for (var i = 0; i < labels.length; i++) {\r\n        if (labels[i].htmlFor === inputId) {\r\n            var input = document.getElementById(labels[i].htmlFor)\r\n            if (input)\r\n                input.label = labels[i]\r\n                input.label.style.color = color\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n    var input = document.getElementById(inputId)\r\n    input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedUpdateKeywordForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            updateKeywordTitle: \"\",\r\n            id: \"\",\r\n            placeId: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n        this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n        this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n        this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n        this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            updateKeywordTitle: this.props.keyword.title,\r\n            id: this.props.keyword.id,\r\n            placeId: this.props.place.id\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.dataset.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault()\r\n\r\n        this.props.updateKeyword({\r\n            title: this.state.updateKeywordTitle,\r\n            id: this.state.id\r\n            // placeId: this.state.placeId\r\n        })\r\n\r\n        this.setState({\r\n            updateKeywordTitle: \"\",\r\n        })\r\n\r\n        this.props.hideUpdateKeyword()\r\n    }\r\n\r\n    handleMouseOverInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"gold\")\r\n        changeInputColor(event.target.id, \"gold\")\r\n    }\r\n\r\n    handleMouseOutInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"orange\")\r\n        changeInputColor(event.target.id, \"orange\")\r\n    }\r\n\r\n    handleMouseOverLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"gold\")\r\n        changeInputColor(event.target.htmlFor, \"gold\")\r\n    }\r\n\r\n    handleMouseOutLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"orange\")\r\n        changeInputColor(event.target.htmlFor, \"orange\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"updateKeywordForm\" id=\"updateKeywordForm\">\r\n                <form onSubmit={this.handleUpdate} autoComplete=\"off\">\r\n                    <div className=\"updateKeywordFormRow\">\r\n                        <label htmlFor={\"updateKeywordTitle\" + this.state.id} className=\"updateKeywordLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Title</label>\r\n                        <input type=\"text\" className=\"updateKeywordInput\" id={\"updateKeywordTitle\" + this.state.id} data-id=\"updateKeywordTitle\" value={this.state.updateKeywordTitle} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} autoFocus />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"updateKeywordSaveButton\">Save keyword</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst UpdateKeywordForm = connect(null, mapDispatchToProps)(ConnectedUpdateKeywordForm)\r\n\r\nexport default UpdateKeywordForm","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteKeyword } from '../actions/KeywordActions'\r\nimport UpdateKeywordForm from './UpdateKeywordForm'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteKeyword: id => dispatch(deleteKeyword(id))\r\n    }\r\n}\r\n\r\nclass ConnectedKeyword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showKeyword: false,\r\n            showKeywordForm: false\r\n        }\r\n\r\n        this.handleDeleteKeyword = this.handleDeleteKeyword.bind(this)\r\n        this.toggleShowKeyword = this.toggleShowKeyword.bind(this)\r\n        this.toggleUpdateKeyword = this.toggleUpdateKeyword.bind(this)\r\n        this.hideUpdateKeyword = this.hideUpdateKeyword.bind(this)\r\n    }\r\n\r\n    handleDeleteKeyword() {\r\n        this.props.deleteKeyword({\r\n            keyword: this.props.keyword,\r\n            place: this.props.place\r\n        })\r\n    }\r\n\r\n    toggleShowKeyword() {\r\n        const titleText = document.getElementById(\"keywordListTitle\" + this.props.keyword.id)\r\n        const keywordDiv = document.getElementById(\"keywordListObject\" + this.props.keyword.id)\r\n\r\n        if (this.state.showKeyword) {\r\n            titleText.style.color = \"orange\"\r\n            keywordDiv.classList.remove(\"linearGradient\")\r\n            this.hideUpdateKeyword()\r\n        } else {\r\n            titleText.style.color = \"gold\"\r\n            keywordDiv.classList.add(\"linearGradient\")\r\n        }\r\n\r\n        this.setState({ showKeyword: !this.state.showKeyword })\r\n    }\r\n\r\n    toggleUpdateKeyword = (event) => {\r\n        event.preventDefault()\r\n\r\n        !this.state.showKeywordForm ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        this.setState({ showKeywordForm: !this.state.showKeywordForm })\r\n    }\r\n\r\n    hideUpdateKeyword() {\r\n        this.setState({\r\n            showKeywordForm: false\r\n        })\r\n\r\n        let button = document.getElementById(\"updateKeywordButton\")\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div key={this.props.keyword.id} className=\"keywordListObject\" id={\"keywordListObject\" + this.props.keyword.id}>\r\n                <span onClick={this.toggleShowKeyword} className=\"keywordListTitle\" id={\"keywordListTitle\" + this.props.keyword.id}>{this.props.keyword.title}</span>\r\n                {this.state.showKeyword ?\r\n                    <div className=\"keywordInfo\">\r\n                        <div className=\"keywordButtons\">\r\n                            <button onClick={this.handleDeleteKeyword} className=\"deleteKeywordButton\">Delete keyword</button>\r\n                            <button onClick={this.toggleUpdateKeyword} className=\"updateKeywordButton\" id=\"updateKeywordButton\">Update keyword</button>\r\n                        </div>\r\n                        {this.state.showKeywordForm ?\r\n                            <UpdateKeywordForm\r\n                                keyword={this.props.keyword}\r\n                                place={this.props.place}\r\n                                hideUpdateKeyword={this.hideUpdateKeyword}\r\n                            />\r\n                        : null}\r\n                    </div>\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Keyword = connect(null, mapDispatchToProps)(ConnectedKeyword)\r\n\r\nexport default Keyword","import React from 'react'\r\nimport Keyword from './Keyword'\r\nimport { connect } from 'react-redux'\r\nimport { fetchKeywords } from '../actions/KeywordActions'\r\n\r\nconst mapStateToProps = state => ({\r\n    keywords: state.keywordReducer.keywords,\r\n    loading: state.keywordReducer.loading,\r\n    error: state.keywordReducer.error\r\n})\r\n\r\nclass ConnectedKeywordList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchKeywords())\r\n    }\r\n\r\n    render() {\r\n        const { error, loading, keywords } = this.props\r\n        if (error) {\r\n            return <div>Error! {error.message}</div>\r\n        }\r\n        if (loading && keywords.length > 0) {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        return(\r\n            <div className=\"keywordsList\">\r\n                <p className=\"keywordList\">Keywords:</p>\r\n                {keywords ?\r\n                    keywords.map(keyword =>\r\n                        keyword.place && keyword.place._id === this.props.place.id ?\r\n                            <Keyword\r\n                                key={keyword.id}\r\n                                keyword={keyword}\r\n                                place={this.props.place}\r\n                            />\r\n                        : null\r\n                    )\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst KeywordList = connect(mapStateToProps)(ConnectedKeywordList)\r\n\r\nexport default KeywordList","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { createKeyword } from '../actions/KeywordActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createKeyword: keyword => dispatch(createKeyword(keyword))\r\n    }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n    var labels = document.getElementsByTagName('LABEL')\r\n    for (var i = 0; i < labels.length; i++) {\r\n        if (labels[i].htmlFor === inputId) {\r\n            var input = document.getElementById(labels[i].htmlFor)\r\n            if (input)\r\n                input.label = labels[i]\r\n                input.label.style.color = color\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n    var input = document.getElementById(inputId)\r\n    input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedKeywordForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            keywordTitle: \"\",\r\n            placeId: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this)\r\n        this.hideForm = this.hideForm.bind(this)\r\n        this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n        this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n        this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n        this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ placeId: this.props.place.id })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.dataset.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const keywordTitle = this.state.keywordTitle\r\n\r\n        this.props.createKeyword({\r\n            title: keywordTitle,\r\n            placeId: this.state.placeId\r\n        })\r\n\r\n        this.setState({\r\n            keywordTitle: \"\"\r\n        })\r\n\r\n        this.hideForm()\r\n    }\r\n\r\n    toggleFormDisplay(event) {\r\n        event.preventDefault()\r\n\r\n        let form = document.getElementById(\"createKeywordForm\" + this.state.placeId)\r\n\r\n        form.style.display === \"none\" ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        \r\n        form.style.display === \"none\" ? form.style.display = \"block\" : form.style.display = \"none\"\r\n        document.getElementById(\"keywordTitle\" + this.state.placeId).focus()\r\n    }\r\n\r\n    hideForm() {\r\n        let form = document.getElementById(\"createKeywordForm\" + this.state.placeId)\r\n        form.style.display = \"none\"\r\n\r\n        let button = document.getElementById(\"addKeywordButton\" + this.state.placeId)\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    handleMouseOverInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"gold\")\r\n        changeInputColor(event.target.id, \"gold\")\r\n    }\r\n\r\n    handleMouseOutInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"orange\")\r\n        changeInputColor(event.target.id, \"orange\")\r\n    }\r\n\r\n    handleMouseOverLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"gold\")\r\n        changeInputColor(event.target.htmlFor, \"gold\")\r\n    }\r\n\r\n    handleMouseOutLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"orange\")\r\n        changeInputColor(event.target.htmlFor, \"orange\")\r\n    }\r\n\r\n    render() {\r\n        const formStyle = {\r\n            display: \"none\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"keywordForm\">\r\n                <button onClick={this.toggleFormDisplay} className=\"addKeywordButton\" id={\"addKeywordButton\" + this.state.placeId}>Add keyword</button>\r\n                <div className=\"createKeywordForm\" id={\"createKeywordForm\" + this.state.placeId} style={formStyle}>\r\n                    <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                        <div className=\"createKeywordFormRow\">\r\n                            <label htmlFor={\"keywordTitle\" + this.state.placeId} className=\"createKeywordLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Title</label>\r\n                            <input type=\"text\" className=\"createKeywordInput\" id={\"keywordTitle\" + this.state.placeId} value={this.state.keywordTitle} data-id=\"keywordTitle\" onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"createKeywordSaveButton\">Save keyword</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst KeywordForm = connect(null, mapDispatchToProps)(ConnectedKeywordForm)\r\n\r\nexport default KeywordForm","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { updatePlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updatePlace: place => dispatch(updatePlace(place))\r\n    }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n    var labels = document.getElementsByTagName('LABEL')\r\n    for (var i = 0; i < labels.length; i++) {\r\n        if (labels[i].htmlFor === inputId) {\r\n            var input = document.getElementById(labels[i].htmlFor)\r\n            if (input)\r\n                input.label = labels[i]\r\n                input.label.style.color = color\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n    var input = document.getElementById(inputId)\r\n    input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedUpdatePlaceForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            updateTitle: \"\",\r\n            updateDescription: \"\",\r\n            updateLatitude: \"\",\r\n            updateLongitude: \"\",\r\n            updateOpeningHours: \"\",\r\n            id: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n        this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n        this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n        this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n        this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            updateTitle: this.props.place.title,\r\n            updateDescription: this.props.place.description,\r\n            updateLatitude: this.props.place.latitude,\r\n            updateLongitude: this.props.place.longitude,\r\n            updateOpeningHours: this.props.place.openingHours,\r\n            id: this.props.place.id\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.dataset.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault()\r\n\r\n        this.props.updatePlace({\r\n            title: this.state.updateTitle,\r\n            description: this.state.updateDescription,\r\n            latitude: this.state.updateLatitude,\r\n            longitude: this.state.updateLongitude,\r\n            openingHours: this.state.updateOpeningHours,\r\n            id: this.state.id,\r\n            keywords: this.props.place.keywords\r\n        })\r\n\r\n        this.setState({\r\n            updateTitle: \"\",\r\n            updateDescription: \"\",\r\n            updateLatitude: \"\",\r\n            updateLongitude: \"\",\r\n            updateOpeningHours: \"\"\r\n        })\r\n\r\n        this.props.hideUpdatePlace()\r\n    }\r\n\r\n    handleMouseOverInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"gold\")\r\n        changeInputColor(event.target.id, \"gold\")\r\n    }\r\n\r\n    handleMouseOutInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"orange\")\r\n        changeInputColor(event.target.id, \"orange\")\r\n    }\r\n\r\n    handleMouseOverLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"gold\")\r\n        changeInputColor(event.target.htmlFor, \"gold\")\r\n    }\r\n\r\n    handleMouseOutLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"orange\")\r\n        changeInputColor(event.target.htmlFor, \"orange\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"updatePlaceForm\" id=\"updatePlaceForm\">\r\n                <form onSubmit={this.handleUpdate} autoComplete=\"off\">\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateTitle\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Title</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateTitle\" + this.state.id} data-id=\"updateTitle\" value={this.state.updateTitle} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} autoFocus />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateDescription\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Description</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateDescription\" + this.state.id} data-id=\"updateDescription\" value={this.state.updateDescription} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateLatitude\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Latitude</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateLatitude\" + this.state.id} data-id=\"updateLatitude\" value={this.state.updateLatitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateLongitude\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Longitude</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateLongitude\" + this.state.id} data-id=\"updateLongitude\" value={this.state.updateLongitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateOpeningHours\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Opening hours</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateOpeningHours\" + this.state.id} data-id=\"updateOpeningHours\" value={this.state.updateOpeningHours} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"updatePlaceSaveButton\">Save place</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst UpdatePlaceForm = connect(null, mapDispatchToProps)(ConnectedUpdatePlaceForm)\r\n\r\nexport default UpdatePlaceForm","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deletePlace } from '../actions/PlaceActions'\r\nimport KeywordList from './KeywordList'\r\nimport KeywordForm from './KeywordForm'\r\nimport UpdatePlaceForm from './UpdatePlaceForm'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deletePlace: id => dispatch(deletePlace(id))\r\n    }\r\n}\r\n\r\nclass ConnectedPlace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showPlace: false,\r\n            showUpdateForm: false\r\n        }\r\n\r\n        this.handleDeletePlace = this.handleDeletePlace.bind(this)\r\n        this.toggleShowPlace = this.toggleShowPlace.bind(this)\r\n        this.toggleUpdatePlace = this.toggleUpdatePlace.bind(this)\r\n        this.hideUpdatePlace = this.hideUpdatePlace.bind(this)\r\n    }\r\n\r\n    handleDeletePlace() {\r\n        this.props.deletePlace(this.props.place.id)\r\n    }\r\n\r\n    toggleShowPlace() {\r\n        const titleText = document.getElementById(\"placeListTitle\" + this.props.place.id)\r\n        const placeDiv = document.getElementById(\"placeListObject\" + this.props.place.id)\r\n\r\n        if (this.state.showPlace) {\r\n            titleText.style.color = \"orange\"\r\n            placeDiv.classList.remove(\"linearGradient\")\r\n            this.hideUpdatePlace()\r\n        } else {\r\n            titleText.style.color = \"gold\"\r\n            placeDiv.classList.add(\"linearGradient\")\r\n        }\r\n\r\n        this.setState({ showPlace: !this.state.showPlace })\r\n    }\r\n\r\n    toggleUpdatePlace = (event) => {\r\n        event.preventDefault()\r\n\r\n        !this.state.showUpdateForm ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        this.setState({ showUpdateForm: !this.state.showUpdateForm })\r\n    }\r\n\r\n    hideUpdatePlace() {\r\n        this.setState({\r\n            showUpdateForm: false\r\n        })\r\n\r\n        let button = document.getElementById(\"updatePlaceButton\")\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div key={this.props.place.id} className=\"placeListObject\" id={\"placeListObject\" + this.props.place.id}>\r\n                <span onClick={this.toggleShowPlace} className=\"placeListTitle\" id={\"placeListTitle\" + this.props.place.id}>{this.props.place.title}</span>\r\n                {this.state.showPlace ?\r\n                    <div className=\"placeInfo\">\r\n                        <span>{this.props.place.description}</span><br/>\r\n                        <span>Open: {this.props.place.openingHours}</span><br/>\r\n                        <KeywordList place={this.props.place} />\r\n                        <KeywordForm place={this.props.place} />\r\n                        <div className=\"placeButtons\">\r\n                            <button onClick={this.handleDeletePlace} className=\"deletePlaceButton\">Delete place</button>\r\n                            <button onClick={this.toggleUpdatePlace} className=\"updatePlaceButton\" id=\"updatePlaceButton\">Update place</button>\r\n                        </div>\r\n                        {this.state.showUpdateForm ?\r\n                            <UpdatePlaceForm\r\n                                place={this.props.place}\r\n                                hideUpdatePlace={this.hideUpdatePlace}\r\n                            />\r\n                        : null}\r\n                    </div>\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Place = connect(null, mapDispatchToProps)(ConnectedPlace)\r\n\r\nexport default Place","import React from 'react'\r\nimport Place from './Place'\r\nimport { connect } from 'react-redux'\r\nimport { fetchPlaces } from '../actions/PlaceActions'\r\n\r\nconst mapStateToProps = state => ({\r\n    places: state.placeReducer.places,\r\n    loading: state.placeReducer.loading,\r\n    error: state.placeReducer.error\r\n})\r\n\r\nclass ConnectedPlaceList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchPlaces())\r\n    }\r\n\r\n    render() {\r\n        const { error, loading, places } = this.props\r\n        if (error) {\r\n            return <div>Error! {error.message}</div>\r\n        }\r\n        if (loading && places.length > 0) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return(\r\n            <div className=\"placesList\">\r\n                {places ?\r\n                    places.map(place =>\r\n                        <Place\r\n                            key={place.id}\r\n                            place={place}\r\n                        />\r\n                    )\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlaceList = connect(mapStateToProps)(ConnectedPlaceList)\r\n\r\nexport default PlaceList","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchPlaces, getPlacesByQuery } from '../actions/PlaceActions'\r\n\r\nconst mapStateToProps = state => ({\r\n    places: state.placeReducer.places,\r\n    placesByQuery: state.placeReducer.placesByQuery\r\n})\r\n\r\nclass ConnectedKeywordSearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            keywordSearchQuery: ''\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchPlaces())\r\n    }\r\n\r\n    handleChange(event) {\r\n        const keywordSearchQuery = event.target.value\r\n        this.setState({\r\n            keywordSearchQuery\r\n        })\r\n        let placesByQuery = []\r\n        // Compare search query to all keywords from places\r\n        this.props.places.map((place, index) => {\r\n            if (place.keywords) {\r\n                place.keywords.map(keyword =>\r\n                    keywordSearchQuery.length > 0 && keyword.title.toLowerCase().includes(keywordSearchQuery.toLowerCase()) ?\r\n                        !placesByQuery.includes(place) ?\r\n                            placesByQuery = placesByQuery.concat(place)\r\n                        : null\r\n                    : null\r\n                )\r\n            }\r\n            if (index === this.props.places.length - 1) {\r\n                this.props.dispatch(getPlacesByQuery(placesByQuery, keywordSearchQuery))\r\n            }\r\n            return null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"keywordSearch\">\r\n                <p>Search places with keywords</p>\r\n                <input className=\"keywordSearchInput\" id=\"keywordSearchQuery\" onChange={this.handleChange} />\r\n\r\n                <div>\r\n                    {this.props.placesByQuery.map(place =>\r\n                        <p key={place.id}>{place.title}</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst KeywordSearch = connect(mapStateToProps)(ConnectedKeywordSearch)\r\n\r\nexport default KeywordSearch","import React from 'react'\r\nimport GoogleMap from './components/GoogleMap'\r\nimport PlaceForm from './components/PlaceForm'\r\nimport PlaceList from './components/PlaceList'\r\nimport KeywordSearch from './components/KeywordSearch'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <GoogleMap />\r\n      <div id=\"alignedDivs\">\r\n        <div id=\"leftDiv\">\r\n          <PlaceForm />\r\n        </div>\r\n\r\n        <div id=\"rightDiv\">\r\n          <PlaceList />\r\n          <KeywordSearch />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import {\r\n  CREATE_PLACE,\r\n  DELETE_PLACE,\r\n  UPDATE_PLACE,\r\n  FETCH_PLACES_BEGIN,\r\n  FETCH_PLACES_SUCCESS,\r\n  FETCH_PLACES_FAILURE,\r\n  PLACES_BY_QUERY,\r\n  ADD_KEYWORD_TO_PLACE,\r\n  DELETE_KEYWORD_FROM_PLACE,\r\n  UPDATE_KEYWORD_FOR_PLACE\r\n} from '../constants/PlaceConstants'\r\n\r\nconst initialState = {\r\n    places: [],\r\n    placesByQuery: [],\r\n    keywordSearchQuery: '',\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst PlaceReducer = (state = initialState, action) => {\r\n  let places = state.places\r\n    switch (action.type) {\r\n      case FETCH_PLACES_BEGIN:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          error: null\r\n        }\r\n      case FETCH_PLACES_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          places: action.data.places\r\n        }\r\n      case FETCH_PLACES_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.data.error,\r\n          places: []\r\n        }\r\n      case CREATE_PLACE:\r\n        return Object.assign({}, state, {\r\n          places: state.places.concat(action.data)\r\n        })\r\n      case DELETE_PLACE:\r\n        return Object.assign({}, state, {\r\n          places: state.places.filter(place => place.id !== action.data.id)\r\n        })\r\n      case UPDATE_PLACE:\r\n        return Object.assign({}, state, {\r\n          places: state.places.map(place => place.id !== action.data.place.id ? place : action.data.place)\r\n        })\r\n      case PLACES_BY_QUERY:\r\n        let placesByQuery = []\r\n        action.data.placesByQuery.map(place =>\r\n          placesByQuery = placesByQuery.concat(place)\r\n        )\r\n        return Object.assign({}, state, {\r\n          placesByQuery: placesByQuery,\r\n          keywordSearchQuery: action.data.keywordSearchQuery\r\n        })\r\n      case ADD_KEYWORD_TO_PLACE:\r\n        places = state.places\r\n        const keyword = {\r\n          _id: action.data.keyword.id,\r\n          title: action.data.keyword.title\r\n        }\r\n        places.map(place => place.id === action.data.keyword.place._id ? place.keywords = place.keywords.concat(keyword) : null)\r\n        return Object.assign({}, state, {\r\n          places: places\r\n        })\r\n      case DELETE_KEYWORD_FROM_PLACE:\r\n        let placeToEdit = action.data.place\r\n        placeToEdit.keywords = placeToEdit.keywords.filter(keyword => keyword._id !== action.data.keyword.id)\r\n        return Object.assign({}, state, {\r\n          places: state.places.map(place => place.id === placeToEdit.id ? placeToEdit : place)\r\n        })\r\n      case UPDATE_KEYWORD_FOR_PLACE:\r\n        places = state.places\r\n        for (let i = 0; i < places.length; i++) {\r\n          if (places[i].id === action.data.keyword.place._id) {\r\n            const place = places[i]\r\n            place.keywords.map(keyword => keyword._id === action.data.keyword.id ? keyword.title = action.data.keyword.title : null)\r\n          }\r\n        }\r\n        return Object.assign({}, state, {\r\n          places: places\r\n        })\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default PlaceReducer","\r\nconst initialState = {\r\n    markers: [\r\n        {\r\n            title: \"testiMarker\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst MarkerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default MarkerReducer","import {\r\n    CREATE_KEYWORD,\r\n    DELETE_KEYWORD,\r\n    UPDATE_KEYWORD,\r\n    FETCH_KEYWORDS_BEGIN,\r\n    FETCH_KEYWORDS_SUCCESS,\r\n    FETCH_KEYWORDS_FAILURE\r\n  } from '../constants/KeywordConstants'\r\n  \r\n  const initialState = {\r\n      keywords: [],\r\n      loading: false,\r\n      error: null\r\n  }\r\n  \r\n  const KeywordReducer = (state = initialState, action) => {\r\n      switch (action.type) {\r\n        case FETCH_KEYWORDS_BEGIN:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            error: null\r\n          }\r\n        case FETCH_KEYWORDS_SUCCESS:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            keywords: action.data.keywords\r\n          }\r\n        case FETCH_KEYWORDS_FAILURE:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.data.error,\r\n            keywords: []\r\n          }\r\n        case CREATE_KEYWORD:\r\n          return Object.assign({}, state, {\r\n            keywords: state.keywords.concat(action.data)\r\n          })\r\n        case DELETE_KEYWORD:\r\n          return Object.assign({}, state, {\r\n            keywords: state.keywords.filter(keyword => keyword.id !== action.data.id)\r\n          })\r\n        case UPDATE_KEYWORD:\r\n          return Object.assign({}, state, {\r\n            keywords: state.keywords.map(keyword => keyword.id !== action.data.keyword.id ? keyword : action.data.keyword)\r\n          })\r\n        default:\r\n          return state\r\n      }\r\n  }\r\n  \r\n  export default KeywordReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport placeReducer from '../reducers/PlaceReducer'\r\nimport markerReducer from '../reducers/MarkerReducer'\r\nimport keywordReducer from '../reducers/KeywordReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    placeReducer,\r\n    markerReducer,\r\n    keywordReducer\r\n})\r\n\r\nconst RootStore = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default RootStore","import React from 'react'\r\nimport { render } from \"react-dom\"\r\nimport App from './App'\r\nimport { Provider } from \"react-redux\"\r\nimport store from './stores/RootStore'\r\nimport './styles/styles.css'\r\nimport './styles/forms.css'\r\nimport './styles/aligned.css'\r\nimport './styles/responsive.css'\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}