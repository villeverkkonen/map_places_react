{"version":3,"sources":["components/InfoWindowEx.js","services/maps.js","components/MapContainer.js","services/places.js","actions/PlaceActions.js","constants/PlaceConstants.js","components/PlaceForm.js","components/UpdatePlaceForm.js","components/Place.js","components/PlaceList.js","App.js","reducers/PlaceReducer.js","reducers/MarkerReducer.js","stores/RootStore.js","index.js"],"names":["InfoWindowEx","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","infoWindowRef","React","createRef","onInfoWindowOpen","bind","assertThisInitialized","containerElement","document","createElement","inherits","createClass","key","value","ReactDOM","render","Children","only","children","current","infowindow","setContent","react_default","a","dist","assign","onOpen","ref","Component","maps","ConnectedContainer","toggleInfoWindow","marker","e","title","state","activeMarker","showingInfoWindow","setState","selectedPlace","place_","apiKey","_this2","className","google","zoom","initialCenter","lat","lng","places","map","place","id","position","latitude","longitude","onClick","components_InfoWindowEx","visible","description","openingHours","MapContainer","connect","placeReducer","markers","markerReducer","GoogleApiWrapper","mapService","baseUrl","services_places","getPlaces","axios","get","then","response","data","getPlace","createPlace","post","deletePlace","delete","updatePlace","put","content","dispatch","placeService","catch","err","console","log","res","dispatchCreatePlace","dispatchUpdatePlace","fetchPlacesBegin","type","fetchPlacesSuccess","fetchPlacesFailure","error","dispatchDeletePlace","changeLabelColor","inputId","color","labels","getElementsByTagName","i","length","htmlFor","input","getElementById","label","style","changeInputColor","backgroundColor","ConnectedForm","handleChange","handleSubmit","toggleFormDisplay","hideForm","handleMouseOverLabel","handleMouseOutLabel","handleMouseOverInput","handleMouseOutInput","event","defineProperty","target","preventDefault","form","display","classList","add","remove","focus","onSubmit","autoComplete","onMouseOver","onMouseOut","onChange","PlaceForm","ConnectedUpdateForm","updateTitle","updateDescription","updateLatitude","updateLongitude","updateOpeningHours","handleUpdate","dataset","hideUpdatePlace","data-id","autoFocus","UpdatePlaceForm","ConnectedPlace","toggleUpdatePlace","showUpdateForm","showPlace","handleDeletePlace","toggleShowPlace","titleText","placeDiv","placeDivId","placeListTitleId","components_UpdatePlaceForm","Place","ConnectedList","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","abrupt","t0","stop","_x","apply","arguments","_this$props","loading","message","components_Place","PlaceList","App","components_MapContainer","components_PlaceForm","components_PlaceList","initialState","PlaceReducer","undefined","action","objectSpread","concat","filter","MarkerReducer","rootReducer","combineReducers","RootStore","createStore","applyMiddleware","thunk","es","store","src_App"],"mappings":"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","file":"static/js/main.190cefa3.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport ReactDOM from \"react-dom\";\r\nimport { InfoWindow } from \"google-maps-react\";\r\n\r\nexport class InfoWindowEx extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.infoWindowRef = React.createRef()\r\n        this.onInfoWindowOpen = this.onInfoWindowOpen.bind(this)\r\n        if (!this.containerElement) {\r\n            this.containerElement = document.createElement(`div`)\r\n        }\r\n    }\r\n\r\n    onInfoWindowOpen() {\r\n        ReactDOM.render(\r\n            React.Children.only(this.props.children),\r\n            this.containerElement\r\n        )\r\n        this.infoWindowRef.current.infowindow.setContent(this.containerElement)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <InfoWindow\r\n                onOpen={this.onInfoWindowOpen}\r\n                ref={this.infoWindowRef}\r\n                {...this.props}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfoWindowEx","// import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/maps/'\r\n\r\nconst getApiKey = () => {\r\n    return ''\r\n    // const request = axios.get(baseUrl + 'api_key')\r\n    // return request.then(response => { return response.data })\r\n}\r\n\r\nexport default {\r\n    getApiKey\r\n}","import React, { Component } from 'react'\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\r\nimport { connect } from \"react-redux\"\r\nimport InfoWindowEx from './InfoWindowEx'\r\nimport mapService from '../services/maps'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    places: state.placeReducer.places,\r\n    markers: state.markerReducer.markers\r\n  }\r\n}\r\n\r\nexport class ConnectedContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      apiKey: ''\r\n    }\r\n\r\n    this.toggleInfoWindow = this.toggleInfoWindow.bind(this)\r\n  }\r\n\r\n  toggleInfoWindow = (props, marker, e) => {\r\n    if (marker.title === this.state.activeMarker.title && this.state.showingInfoWindow) {\r\n      this.setState({\r\n        activeMarker: {},\r\n        showingInfoWindow: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        selectedPlace: props.place_,\r\n        activeMarker: marker,\r\n        showingInfoWindow: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"map\">\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={5}\r\n          initialCenter={{\r\n            lat: 60.192059,\r\n            lng: 24.945831\r\n          }}\r\n        >\r\n          {this.props.places ?\r\n              this.props.places.map(place =>\r\n                  <Marker\r\n                      key={place.id}\r\n                      position={{lat: place.latitude, lng: place.longitude}}\r\n                      title={place.title}\r\n                      place_={place}\r\n                      onClick={this.toggleInfoWindow}\r\n                  />\r\n                )\r\n            : null}\r\n            <InfoWindowEx\r\n              marker={this.state.activeMarker}\r\n              visible={this.state.showingInfoWindow}\r\n            >\r\n              <div className=\"infoWindow\">\r\n                <h3>{this.state.selectedPlace.title}</h3>\r\n                <p>{this.state.selectedPlace.description}</p>\r\n                <p>Open: {this.state.selectedPlace.openingHours}</p>\r\n              </div>\r\n            </InfoWindowEx>\r\n        </Map>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst getApiKey = () => {\r\n  return mapService.getApiKey()\r\n}\r\n\r\nconst MapContainer = connect(mapStateToProps)(ConnectedContainer)\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: getApiKey()\r\n})(MapContainer)","import axios from 'axios'\r\nconst baseUrl = '/api/places/'\r\n\r\nconst getPlaces = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst getPlace = (id) => {\r\n    const request = axios.get(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst createPlace = (place) => {\r\n    const request = axios.post(baseUrl, place)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst deletePlace = (id) => {\r\n    const request = axios.delete(baseUrl + id)\r\n    return request.then(response => { return response.data })\r\n}\r\n\r\nconst updatePlace = (place) => {\r\n    const request = axios.put(baseUrl + place.id, place)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default {\r\n    getPlaces,\r\n    getPlace,\r\n    createPlace,\r\n    deletePlace,\r\n    updatePlace\r\n}","import {\r\n    CREATE_PLACE,\r\n    DELETE_PLACE,\r\n    UPDATE_PLACE,\r\n    FETCH_PLACES_BEGIN,\r\n    FETCH_PLACES_SUCCESS,\r\n    FETCH_PLACES_FAILURE\r\n} from '../constants/PlaceConstants'\r\nimport placeService from '../services/places'\r\n\r\nexport function fetchPlaces() {\r\n    return async dispatch => {\r\n        dispatch(fetchPlacesBegin())\r\n        try {\r\n            const res = await placeService.getPlaces()\r\n            dispatch(fetchPlacesSuccess(res))\r\n            return res\r\n        }\r\n        catch (error) {\r\n            return dispatch(fetchPlacesFailure(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const createPlace = content => {\r\n\r\n    const place = {\r\n        title: content.title,\r\n        description: content.description,\r\n        latitude: content.latitude,\r\n        longitude: content.longitude,\r\n        openingHours: content.openingHours\r\n    }\r\n\r\n    return dispatch => {\r\n        placeService.createPlace(place)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchCreatePlace(res))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePlace = id => {\r\n    return dispatch => {\r\n        placeService.deletePlace(id)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchDeletePlace(id))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePlace = place => {\r\n    return dispatch => {\r\n        placeService.updatePlace(place)\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n        .then(res => {\r\n            dispatch(dispatchUpdatePlace(place))\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchPlacesBegin = () => ({\r\n    type: FETCH_PLACES_BEGIN\r\n})\r\n\r\nexport const fetchPlacesSuccess = places => ({\r\n    type: FETCH_PLACES_SUCCESS,\r\n    data: { places }\r\n})\r\n\r\nexport const fetchPlacesFailure = error => ({\r\n    type: FETCH_PLACES_FAILURE,\r\n    data: { error }\r\n})\r\n\r\nconst dispatchCreatePlace = place => {\r\n    return {\r\n        type: CREATE_PLACE,\r\n        data: {\r\n            title: place.title,\r\n            description: place.description,\r\n            latitude: place.latitude,\r\n            longitude: place.longitude,\r\n            openingHours: place.openingHours,\r\n            id: place.id\r\n        }\r\n    }\r\n}\r\n\r\nconst dispatchDeletePlace = id => {\r\n    return {\r\n        type: DELETE_PLACE,\r\n        data: { id: id }\r\n    }\r\n}\r\n\r\nconst dispatchUpdatePlace = place => {\r\n    return {\r\n        type: UPDATE_PLACE,\r\n        data: { place: place }\r\n    }\r\n}","export const CREATE_PLACE = 'CREATE_PLACE'\r\nexport const DELETE_PLACE = 'DELETE_PLACE'\r\nexport const UPDATE_PLACE = 'UPDATE_PLACE'\r\nexport const FETCH_PLACES_BEGIN = 'FETCH_PLACES_BEGIN'\r\nexport const FETCH_PLACES_SUCCESS = 'FETCH_PLACES_SUCCESS'\r\nexport const FETCH_PLACES_FAILURE = 'FETCH_PLACES_FAILURE'","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { createPlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createPlace: place => dispatch(createPlace(place))\r\n    }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n    var labels = document.getElementsByTagName('LABEL')\r\n    for (var i = 0; i < labels.length; i++) {\r\n        if (labels[i].htmlFor === inputId) {\r\n            var input = document.getElementById(labels[i].htmlFor)\r\n            if (input)\r\n                input.label = labels[i]\r\n                input.label.style.color = color\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n    var input = document.getElementById(inputId)\r\n    input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.toggleFormDisplay = this.toggleFormDisplay.bind(this)\r\n        this.hideForm = this.hideForm.bind(this)\r\n        this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n        this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n        this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n        this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const title = this.state.title\r\n        const description = this.state.description\r\n        const latitude = this.state.latitude\r\n        const longitude = this.state.longitude\r\n        const openingHours = this.state.openingHours\r\n\r\n        this.props.createPlace({\r\n            title,\r\n            description,\r\n            latitude,\r\n            longitude,\r\n            openingHours\r\n        })\r\n\r\n        this.setState({\r\n            title: \"\",\r\n            description: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            openingHours: \"\"\r\n        })\r\n\r\n        this.hideForm()\r\n    }\r\n\r\n    toggleFormDisplay(event) {\r\n        event.preventDefault()\r\n\r\n        let form = document.getElementById(\"createPlaceForm\")\r\n\r\n        form.style.display === \"none\" ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        \r\n        form.style.display === \"none\" ? form.style.display = \"block\" : form.style.display = \"none\"\r\n        document.getElementById(\"title\").focus()\r\n    }\r\n\r\n    hideForm() {\r\n        let form = document.getElementById(\"createPlaceForm\")\r\n        form.style.display = \"none\"\r\n\r\n        let button = document.getElementById(\"addPlaceButton\")\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    handleMouseOverInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"gold\")\r\n        changeInputColor(event.target.id, \"gold\")\r\n    }\r\n\r\n    handleMouseOutInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"orange\")\r\n        changeInputColor(event.target.id, \"orange\")\r\n    }\r\n\r\n    handleMouseOverLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"gold\")\r\n        changeInputColor(event.target.htmlFor, \"gold\")\r\n    }\r\n\r\n    handleMouseOutLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"orange\")\r\n        changeInputColor(event.target.htmlFor, \"orange\")\r\n    }\r\n\r\n    render() {\r\n        const formStyle = {\r\n            display: \"none\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"placeForm\">\r\n                <button onClick={this.toggleFormDisplay} className=\"addPlaceButton\" id=\"addPlaceButton\">Add place</button>\r\n                <div className=\"createPlaceForm\" id=\"createPlaceForm\" style={formStyle}>\r\n                    <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"title\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Title</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"title\" value={this.state.title} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"description\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Description</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"description\" value={this.state.description} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"latitude\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Latitude</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"latitude\" value={this.state.latitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"longitude\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Longitude</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"longitude\" value={this.state.longitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <div className=\"createPlaceFormRow\">\r\n                            <label htmlFor=\"openingHours\" className=\"createPlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Opening hours</label>\r\n                            <input type=\"text\" className=\"createPlaceInput\" id=\"openingHours\" value={this.state.openingHours} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"createPlaceSaveButton\">Save</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlaceForm = connect(null, mapDispatchToProps)(ConnectedForm)\r\n\r\nexport default PlaceForm","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { updatePlace } from '../actions/PlaceActions'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updatePlace: place => dispatch(updatePlace(place))\r\n    }\r\n}\r\n\r\nfunction changeLabelColor(inputId, color) {\r\n    var labels = document.getElementsByTagName('LABEL')\r\n    for (var i = 0; i < labels.length; i++) {\r\n        if (labels[i].htmlFor === inputId) {\r\n            var input = document.getElementById(labels[i].htmlFor)\r\n            if (input)\r\n                input.label = labels[i]\r\n                input.label.style.color = color\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeInputColor(inputId, color) {\r\n    var input = document.getElementById(inputId)\r\n    input.style.backgroundColor = color\r\n}\r\n\r\nclass ConnectedUpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            updateTitle: \"\",\r\n            updateDescription: \"\",\r\n            updateLatitude: \"\",\r\n            updateLongitude: \"\",\r\n            updateOpeningHours: \"\",\r\n            id: \"\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n        this.handleMouseOverLabel = this.handleMouseOverLabel.bind(this)\r\n        this.handleMouseOutLabel = this.handleMouseOutLabel.bind(this)\r\n        this.handleMouseOverInput = this.handleMouseOverInput.bind(this)\r\n        this.handleMouseOutInput = this.handleMouseOutInput.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            updateTitle: this.props.place.title,\r\n            updateDescription: this.props.place.description,\r\n            updateLatitude: this.props.place.latitude,\r\n            updateLongitude: this.props.place.longitude,\r\n            updateOpeningHours: this.props.place.openingHours,\r\n            id: this.props.place.id\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.dataset.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleUpdate(event) {\r\n        event.preventDefault()\r\n\r\n        this.props.updatePlace({\r\n            title: this.state.updateTitle,\r\n            description: this.state.updateDescription,\r\n            latitude: this.state.updateLatitude,\r\n            longitude: this.state.updateLongitude,\r\n            openingHours: this.state.updateOpeningHours,\r\n            id: this.state.id\r\n        })\r\n\r\n        this.setState({\r\n            updateTitle: \"\",\r\n            updateDescription: \"\",\r\n            updateLatitude: \"\",\r\n            updateLongitude: \"\",\r\n            updateOpeningHours: \"\"\r\n        })\r\n\r\n        this.props.hideUpdatePlace()\r\n    }\r\n\r\n    handleMouseOverInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"gold\")\r\n        changeInputColor(event.target.id, \"gold\")\r\n    }\r\n\r\n    handleMouseOutInput(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.id, \"orange\")\r\n        changeInputColor(event.target.id, \"orange\")\r\n    }\r\n\r\n    handleMouseOverLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"gold\")\r\n        changeInputColor(event.target.htmlFor, \"gold\")\r\n    }\r\n\r\n    handleMouseOutLabel(event) {\r\n        event.preventDefault()\r\n        changeLabelColor(event.target.htmlFor, \"orange\")\r\n        changeInputColor(event.target.htmlFor, \"orange\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"updatePlaceForm\" id=\"updatePlaceForm\">\r\n                <form onSubmit={this.handleUpdate} autoComplete=\"off\">\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateTitle\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Title</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateTitle\" + this.state.id} data-id=\"updateTitle\" value={this.state.updateTitle} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} autoFocus />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateDescription\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Description</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateDescription\" + this.state.id} data-id=\"updateDescription\" value={this.state.updateDescription} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateLatitude\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Latitude</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateLatitude\" + this.state.id} data-id=\"updateLatitude\" value={this.state.updateLatitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateLongitude\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Longitude</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateLongitude\" + this.state.id} data-id=\"updateLongitude\" value={this.state.updateLongitude} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <div className=\"updatePlaceFormRow\">\r\n                        <label htmlFor={\"updateOpeningHours\" + this.state.id} className=\"updatePlaceLabel\" onMouseOver={this.handleMouseOverLabel} onMouseOut={this.handleMouseOutLabel}>Opening hours</label>\r\n                        <input type=\"text\" className=\"updatePlaceInput\" id={\"updateOpeningHours\" + this.state.id} data-id=\"updateOpeningHours\" value={this.state.updateOpeningHours} onChange={this.handleChange} onMouseOver={this.handleMouseOverInput} onMouseOut={this.handleMouseOutInput} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"updatePlaceSaveButton\">Save</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst UpdatePlaceForm = connect(null, mapDispatchToProps)(ConnectedUpdateForm)\r\n\r\nexport default UpdatePlaceForm","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deletePlace } from '../actions/PlaceActions'\r\nimport UpdatePlaceForm from './UpdatePlaceForm'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deletePlace: id => dispatch(deletePlace(id))\r\n    }\r\n}\r\n\r\nclass ConnectedPlace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showPlace: false,\r\n            showUpdateForm: false\r\n        }\r\n\r\n        this.handleDeletePlace = this.handleDeletePlace.bind(this)\r\n        this.toggleShowPlace = this.toggleShowPlace.bind(this)\r\n        this.toggleUpdatePlace = this.toggleUpdatePlace.bind(this)\r\n        this.hideUpdatePlace = this.hideUpdatePlace.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ place: this.props.place })\r\n    }\r\n\r\n    handleDeletePlace() {\r\n        this.props.deletePlace(this.props.place.id)\r\n    }\r\n\r\n    toggleShowPlace() {\r\n        const titleText = document.getElementById(\"placeListTitle\" + this.props.place.id)\r\n        const placeDiv = document.getElementById(\"placeListObject\" + this.props.place.id)\r\n\r\n        if (this.state.showPlace) {\r\n            titleText.style.color = \"orange\"\r\n            placeDiv.classList.remove(\"linearGradient\")\r\n            this.hideUpdatePlace()\r\n        } else {\r\n            titleText.style.color = \"gold\"\r\n            placeDiv.classList.add(\"linearGradient\")\r\n        }\r\n\r\n        this.setState({ showPlace: !this.state.showPlace })\r\n    }\r\n\r\n    toggleUpdatePlace = (event) => {\r\n        event.preventDefault()\r\n\r\n        !this.state.showUpdateForm ? event.target.classList.add(\"goldenButton\") : event.target.classList.remove(\"goldenButton\")\r\n        this.setState({ showUpdateForm: !this.state.showUpdateForm })\r\n    }\r\n\r\n    hideUpdatePlace() {\r\n        this.setState({\r\n            showUpdateForm: false\r\n        })\r\n\r\n        let button = document.getElementById(\"updatePlaceButton\")\r\n        button.classList.remove(\"goldenButton\")\r\n    }\r\n\r\n    render() {\r\n        const placeDivId = \"placeListObject\" + this.props.place.id\r\n        const placeListTitleId = \"placeListTitle\" + this.props.place.id\r\n        return (\r\n            <div key={this.props.place.id} className=\"placeListObject\" id={placeDivId}>\r\n                <span onClick={this.toggleShowPlace} className=\"placeListTitle\" id={placeListTitleId}>{this.props.place.title}</span>\r\n                {this.state.showPlace ?\r\n                    <div className=\"placeInfo\">\r\n                        <span>{this.props.place.description}</span><br/>\r\n                        <span>Open: {this.props.place.openingHours}</span><br/>\r\n                        <div className=\"placeButtons\">\r\n                            <button onClick={this.handleDeletePlace} className=\"deletePlaceButton\">Delete</button>\r\n                            <button onClick={this.toggleUpdatePlace} className=\"updatePlaceButton\" id=\"updatePlaceButton\">Update</button>\r\n                        </div>\r\n                        {this.state.showUpdateForm ?\r\n                            <UpdatePlaceForm\r\n                                place={this.props.place}\r\n                                hideUpdatePlace={this.hideUpdatePlace}\r\n                            />\r\n                        : null}\r\n                    </div>\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Place = connect(null, mapDispatchToProps)(ConnectedPlace)\r\n\r\nexport default Place","import React from 'react'\r\nimport Place from './Place'\r\nimport { connect } from 'react-redux'\r\nimport { fetchPlaces } from '../actions/PlaceActions'\r\n\r\nconst mapStateToProps = state => ({\r\n    places: state.placeReducer.places,\r\n    loading: state.placeReducer.loading,\r\n    error: state.placeReducer.error\r\n})\r\n\r\nclass ConnectedList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchPlaces())\r\n    }\r\n\r\n    render() {\r\n        const { error, loading, places } = this.props\r\n        if (error) {\r\n            return <div>Error! {error.message}</div>\r\n        }\r\n        if (loading && places.length > 0) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return(\r\n            <div className=\"placesList\">\r\n                {places ?\r\n                    places.map(place =>\r\n                        <Place\r\n                            key={place.id}\r\n                            place={place}\r\n                        />\r\n                    )\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PlaceList = connect(mapStateToProps)(ConnectedList)\r\n\r\nexport default PlaceList","import React from 'react'\r\nimport MapContainer from './components/MapContainer'\r\nimport PlaceForm from './components/PlaceForm'\r\nimport PlaceList from './components/PlaceList'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <MapContainer />\r\n      <div id=\"alignedDivs\">\r\n        <div id=\"leftDiv\">\r\n          <PlaceForm />\r\n        </div>\r\n\r\n        <div id=\"rightDiv\">\r\n          <PlaceList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import {\r\n  CREATE_PLACE,\r\n  DELETE_PLACE,\r\n  UPDATE_PLACE,\r\n  FETCH_PLACES_BEGIN,\r\n  FETCH_PLACES_SUCCESS,\r\n  FETCH_PLACES_FAILURE\r\n} from '../constants/PlaceConstants'\r\n\r\nconst initialState = {\r\n    places: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst PlaceReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_PLACES_BEGIN:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          error: null\r\n        }\r\n      case FETCH_PLACES_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          places: action.data.places\r\n        }\r\n      case FETCH_PLACES_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.data.error,\r\n          places: []\r\n        }\r\n      case CREATE_PLACE:\r\n        return Object.assign({}, state, {\r\n            places: state.places.concat(action.data)\r\n        })\r\n      case DELETE_PLACE:\r\n        return Object.assign({}, state, {\r\n            places: state.places.filter(place => place.id !== action.data.id)\r\n        })\r\n      case UPDATE_PLACE:\r\n        return Object.assign({}, state, {\r\n          places: state.places.map(place => place.id !== action.data.place.id ? place : action.data.place)\r\n        })\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default PlaceReducer","\r\nconst initialState = {\r\n    markers: [\r\n        {\r\n            title: \"testiMarker\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst MarkerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default MarkerReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport placeReducer from '../reducers/PlaceReducer'\r\nimport markerReducer from '../reducers/MarkerReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    placeReducer,\r\n    markerReducer\r\n})\r\n\r\nconst RootStore = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default RootStore","import React from 'react'\r\nimport { render } from \"react-dom\"\r\nimport App from './App'\r\nimport { Provider } from \"react-redux\"\r\nimport store from './stores/RootStore'\r\nimport './styles/styles.css'\r\nimport './styles/forms.css'\r\nimport './styles/aligned.css'\r\nimport './styles/responsive.css'\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}